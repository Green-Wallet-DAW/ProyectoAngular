{"version":3,"file":"angular-react-core.mjs","sources":["../../../libs/core/src/lib/renderer/pass-prop-decorator.ts","../../../libs/core/src/lib/utils/object/remove-undefined-properties.ts","../../../libs/core/src/lib/utils/dom/dom-utils.ts","../../../libs/core/src/lib/renderer/react-content.ts","../../../libs/core/src/lib/renderer/components/Disguise.ts","../../../libs/core/src/lib/renderer/registry.ts","../../../libs/core/src/lib/renderer/react-node.ts","../../../libs/core/src/lib/renderer/geteventlisteners.ts","../../../libs/core/src/lib/utils/angular-react/metadata.ts","../../../libs/core/src/lib/renderer/renderer.ts","../../../libs/core/src/lib/angular-react-browser.module.ts","../../../libs/core/src/lib/utils/object/to-object.ts","../../../libs/core/src/lib/utils/render/render-delay.ts","../../../libs/core/src/lib/renderer/react-template.ts","../../../libs/core/src/lib/renderer/renderprop-helpers.ts","../../../libs/core/src/lib/components/render-props.ts","../../../libs/core/src/lib/components/wrapper-component.ts","../../../libs/core/src/lib/declarations/public-api.ts","../../../libs/core/src/lib/decorators/angular-react.ts","../../../libs/core/src/public-api.ts","../../../libs/core/public-api.ts","../../../libs/core/angular-react-core.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nexport const passPropsSymbol = Symbol('passProps');\r\n\r\nexport interface PassProp {\r\n  sourceKey: PropertyKey;\r\n  targetKey: PropertyKey;\r\n}\r\n\r\nfunction passPropImpl(target: Object, propertyKey: PropertyKey, targetKey: PropertyKey) {\r\n  if (!target[passPropsSymbol]) {\r\n    target[passPropsSymbol] = [];\r\n  }\r\n\r\n  (target[passPropsSymbol] as PassProp[]).push({\r\n    sourceKey: propertyKey,\r\n    targetKey: targetKey,\r\n  });\r\n}\r\n\r\nconst passPropRename: (propName: string) => PropertyDecorator = propName => (target, propertyKey) =>\r\n  passPropImpl(target, propertyKey, propName);\r\n\r\nconst passPropDirect: PropertyDecorator = (target, propertyKey) => passPropImpl(target, propertyKey, propertyKey);\r\n\r\n/**\r\n * Decorator to specify a property that should be passed as a prop to the underlying React component implicitly.\r\n * Mainly useful for passing child components using the `Disguise` component.\r\n */\r\nexport function passProp(): PropertyDecorator;\r\nexport function passProp(propName: string): PropertyDecorator;\r\nexport function passProp(...args: any[]) {\r\n  if (args.length === 0) {\r\n    return passPropDirect;\r\n  }\r\n\r\n  if (args.length === 1) {\r\n    return passPropRename(args[0]);\r\n  }\r\n\r\n  throw new Error('[passProp] Only 0 or 1 arguments accepted.');\r\n}\r\n\r\nexport function getPassProps<T extends object>(obj: T): PassProp[] {\r\n  return obj[passPropsSymbol];\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/**\r\n * Remove all undefined properties from obj.\r\n *\r\n * Does **not** modify the original object.\r\n * @returns A clone of `obj`, with all `undefined` properties removed\r\n */\r\nconst removeUndefinedProperties = <T extends object>(obj: T): Partial<T> => {\r\n  return Object.entries(obj).reduce((acc, [key, value]) => {\r\n    if (value === undefined) return acc;\r\n    return Object.assign(acc, { [key]: value });\r\n  }, {});\r\n};\r\n\r\nexport default removeUndefinedProperties;\r\n","/**\r\n * Checks if a node is in the DOM.\r\n *\r\n * @param node The node to check\r\n * @returns whether the node is in the DOM\r\n */\r\nexport const isNodeInDOM = (node: Node) => node.isConnected || document.body.contains(node);\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as dom from '../utils/dom/dom-utils';\r\n\r\nconst DEBUG = false;\r\nexport const CHILDREN_TO_APPEND_PROP = 'children-to-append';\r\n\r\n/**\r\n * Props that can be passed to `ReactContent` from users.\r\n */\r\nexport interface ReactContentProps {\r\n  /**\r\n   * Use the legacy rendering mode.\r\n   *\r\n   * Uses a similar approach to `router-outlet`, where the child elements are added to the parent, instead of this node, and this is hidden.\r\n   *\r\n   * @default false\r\n   */\r\n  legacyRenderMode?: boolean;\r\n}\r\n\r\n/**\r\n * Creates a new `ReactContent` element.\r\n * @param children The children to append to the `ReactContent` element.\r\n * @param additionalProps _Optional_. @see `ReactContentProps`.\r\n */\r\nexport function createReactContentElement(children: ReadonlyArray<HTMLElement>, additionalProps?: ReactContentProps) {\r\n  return React.createElement(ReactContent, {\r\n    ...additionalProps,\r\n    [CHILDREN_TO_APPEND_PROP]: children,\r\n  });\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\ninterface InternalReactContentProps extends ReactContentProps {\r\n  readonly [CHILDREN_TO_APPEND_PROP]: ReadonlyArray<HTMLElement>;\r\n}\r\n\r\n/**\r\n * Render any `HTMLElement`s as a child of React components.\r\n * Supports two rendering modes:\r\n *  1. `legacy` - append `<react-content>` as the root, and nest the `children-to-append` underneath it.\r\n *  2. `new` (**default**) - append the `children-to-append` to the parent of this component, and hide the `<react-content>` element.\r\n *     (similar to how `router-outlet` behaves in Angular).\r\n */\r\nexport class ReactContent extends React.PureComponent<InternalReactContentProps> {\r\n  componentDidMount() {\r\n    const element = ReactDOM.findDOMNode(this);\r\n    if (this.props[CHILDREN_TO_APPEND_PROP]) {\r\n      if (DEBUG) {\r\n        console.warn(\r\n          'ReactContent Component > componentDidMount > childrenToAppend:',\r\n          this.props[CHILDREN_TO_APPEND_PROP]\r\n        );\r\n      }\r\n\r\n      const hostElement = this.props.legacyRenderMode ? element : element.parentElement;\r\n\r\n      // Only add children not already in the DOM\r\n      this.props[CHILDREN_TO_APPEND_PROP].filter(child => !dom.isNodeInDOM(child)).forEach(child =>\r\n        hostElement.appendChild(child)\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // TODO: See if we can just render React.Fragment and the children within it, having no extra DOM nodes.\r\n    return React.createElement('react-content', !this.props.legacyRenderMode && { style: { display: 'none' } });\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { ReactWrapperComponent } from '../../components/wrapper-component';\r\nimport { getPassProps } from '../../renderer/pass-prop-decorator';\r\nimport removeUndefinedProperties from '../../utils/object/remove-undefined-properties';\r\nimport { ReactContent } from '../react-content';\r\nimport { ReactElement } from 'react';\r\n\r\n/**\r\n * Props for `Disguise` component.\r\n */\r\nexport interface DisguiseProps {\r\n  /**\r\n   * The type to render the root component as.\r\n   * @default React.Fragment\r\n   */\r\n  disguiseRootAs?: React.ReactType;\r\n\r\n  /**\r\n   * The type to render the child components as.\r\n   * @default the Children's own type.\r\n   */\r\n  disguiseChildrenAs?: React.ReactType;\r\n\r\n  /**\r\n   * The Angular child components to render.\r\n   */\r\n  ngChildComponents?: ReactWrapperComponent<any>[];\r\n\r\n  key?: string | number\r\n}\r\n\r\n/**\r\n * A React component that can render a component and its children as other component types.\r\n */\r\nexport class Disguise extends React.PureComponent<DisguiseProps> {\r\n  render() {\r\n    const { disguiseRootAs, disguiseChildrenAs, children, ngChildComponents, ...rest } = this.props;\r\n\r\n    const renderedChildren = ngChildComponents\r\n      ? this._isReactContentOnlyChild()\r\n        ? this._renderReactContentChildren()\r\n        : this._renderChildrenNaive()\r\n      : children;\r\n\r\n    if (disguiseRootAs != null) {\r\n      return React.createElement(disguiseRootAs, rest || null, renderedChildren);\r\n    } else {\r\n      return React.createElement(React.Fragment, rest.key != null ? { key: rest.key } : null, renderedChildren);\r\n    }\r\n  }\r\n\r\n  private _isReactContentOnlyChild(): boolean {\r\n    const { children } = this.props;\r\n\r\n    if (React.Children.count(children) === 1) {\r\n      const [onlyChild] = React.Children.toArray(children);\r\n      if (typeof onlyChild === 'object' && (<ReactElement<any>>onlyChild).type === ReactContent) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private _renderReactContentChildren() {\r\n    const { ngChildComponents, disguiseChildrenAs } = this.props;\r\n\r\n    const renderedChildren = ngChildComponents.map((child, index) => {\r\n      const propsToPass = removeUndefinedProperties(\r\n        getPassProps(child).reduce(\r\n          (acc, passProp) => Object.assign(acc, { [passProp.targetKey]: child[passProp.sourceKey] }),\r\n          {}\r\n        )\r\n      );\r\n\r\n      return React.createElement(disguiseChildrenAs, {\r\n        ...propsToPass,\r\n        key: index,\r\n        ref: childReactElement => {\r\n          // ref callback is called with null when the component unmounts from the DOM, we don't need to handle it.\r\n          if (!childReactElement) {\r\n            return;\r\n          }\r\n\r\n          ReactDOM.findDOMNode(childReactElement).appendChild(child.elementRef.nativeElement);\r\n        },\r\n      });\r\n    });\r\n\r\n    return renderedChildren;\r\n  }\r\n\r\n  private _renderChildrenNaive() {\r\n    const { children, disguiseChildrenAs } = this.props;\r\n\r\n    const renderedChildren = React.Children.map(children, child => {\r\n      if (!disguiseChildrenAs || typeof child !== 'object') {\r\n        return child;\r\n      }\r\n\r\n      const ChildRoot = (<ReactElement<any>>child).type || disguiseChildrenAs;\r\n      return React.createElement(\r\n        ChildRoot,\r\n        { ...(<ReactElement<any>>child).props, key: (<ReactElement<any>>child).key },\r\n        child\r\n      );\r\n    });\r\n\r\n    return renderedChildren;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport * as React from 'react';\r\n\r\nexport type ComponentResolver = () => React.ReactType;\r\n\r\nconst elementMap = new Map<string, { resolver: ComponentResolver }>();\r\nconst camelCaseSplit = /([a-z0-9])([A-Z])/g;\r\n\r\n/**\r\n * Register an element to be renderer when the renderer sees the tag.\r\n * @param elementName the tag to be used to get the component type when rendering.\r\n * @param resolver A resolver to the React component.\r\n */\r\nexport function registerElement(elementName: string, resolver: ComponentResolver): void {\r\n  if (elementMap.has(elementName)) {\r\n    // Ignore multiple register attempts for the same component.\r\n    // Angular doesn't allow sharing whole NgModule instances (in this case, an @NgModule for React-wrapped components) with lazy-loaded @NgModules (in the app),\r\n    // To keep the API simple, allow multiple calls to `registerElement`.\r\n    // Disadvantage is that you can't replace (React) component implementations at runtime. This sounds far-fetched, but solvable with a `static forRoot()` pattern for every\r\n    // React-wrapper components' @NgModule, ensuring that `registerElement` is only called once.\r\n    return;\r\n  } else {\r\n    const entry = { resolver: resolver };\r\n    elementMap.set(elementName, entry);\r\n    elementMap.set(elementName.toLowerCase(), entry);\r\n    elementMap.set(elementName.replace(camelCaseSplit, '$1-$2').toLowerCase(), entry);\r\n  }\r\n}\r\n\r\nexport function isKnownComponent(elementName: string): boolean {\r\n  return elementMap.has(elementName) || elementMap.has(elementName.toLowerCase());\r\n}\r\n\r\nexport function getComponentClass(elementName: string): React.ReactType | string {\r\n  const entry = elementMap.get(elementName) || elementMap.get(elementName.toLowerCase());\r\n  if (!entry) {\r\n    // throw new TypeError(`No known component for element ${elementName}.`);\r\n    return elementName;\r\n  }\r\n\r\n  try {\r\n    return entry.resolver();\r\n  } catch (e) {\r\n    throw new TypeError(`Could not load component for: ${elementName}.${e}`);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport { StringMap } from '../declarations/string-map';\r\nimport removeUndefinedProperties from '../utils/object/remove-undefined-properties';\r\nimport { CHILDREN_TO_APPEND_PROP } from './react-content';\r\nimport { getComponentClass } from './registry';\r\n\r\nconst DEBUG = false;\r\n\r\nexport function isReactNode(node: any): node is ReactNode {\r\n  return (<ReactNode>node).setRenderPendingCallback !== undefined;\r\n}\r\n\r\n/**\r\n * Logical representation of everything needed to render a React element in the\r\n * DOM, with the needed methods to do so.\r\n */\r\nexport class ReactNode {\r\n  // Access to these properties are restricted through setters and functions\r\n  // so that the dirty \"render pending\" state of this object can be properly\r\n  // tracked and all nodes with \"render pending\" can be flushed at the end\r\n  // of a render operation.\r\n  private _props = {};\r\n  private _comment: string;\r\n  private _text: string;\r\n  private _typeIsReactElementClass: boolean | undefined;\r\n  private _children: Array<ReactNode> = [];\r\n  private _typeName: string;\r\n  private _childrenToAppend: Array<HTMLElement | Node> = [];\r\n  private _renderedDomElement: HTMLElement;\r\n  private _parent: HTMLElement | ReactNode;\r\n  private _isNotRenderable: boolean;\r\n  private _isDestroyPending: boolean = false;\r\n  private _isRenderPending = true;\r\n\r\n  get domElement() {\r\n    return this._renderedDomElement;\r\n  }\r\n\r\n  set parent(parent: HTMLElement | ReactNode) {\r\n    this._parent = parent;\r\n    this.setRenderPending();\r\n  }\r\n\r\n  get parent(): HTMLElement | ReactNode {\r\n    return this._parent;\r\n  }\r\n\r\n  get shouldRender() {\r\n    return !this._isNotRenderable;\r\n  }\r\n\r\n  get destroyPending() {\r\n    return this._isDestroyPending;\r\n  }\r\n\r\n  constructor(private type?: React.ReactType | string) {\r\n    this.setRenderPending();\r\n    this._tryResolveTypeIsReactElementClass();\r\n  }\r\n\r\n  setRenderPendingCallback = () => null;\r\n\r\n  /**\r\n   * Track all pending render operations internally and set flag on\r\n   * renderer factory so that a flush operation can be scheduled for\r\n   * the \"end\" of render.\r\n   */\r\n  setRenderPending() {\r\n    this.setRenderPendingCallback();\r\n    this._isRenderPending = true;\r\n  }\r\n\r\n  /**\r\n   * Marks the node to be removed from the DOM in the next render cycle.\r\n   */\r\n  destroyNode() {\r\n    this.setRenderPending();\r\n    this._isDestroyPending = true;\r\n  }\r\n\r\n  /**\r\n   * Sets an attribute on the node.\r\n   * @note the value can only be a `string`. See `setProperty` for other use-cases.\r\n   * @see `Renderer2#setAttribute`.\r\n   *\r\n   * @param name The attribute name.\r\n   * @param value The new value.\r\n   */\r\n  setAttribute(name: string, value: string) {\r\n    this.setAttributes({ [name]: value });\r\n  }\r\n\r\n  /**\r\n   * Set attributes on this node.\r\n   * Note that values can only be of type `string`. See `setProperties` for other use-cases.\r\n   * @see `Renderer2#setAttribute`.\r\n   *\r\n   * @param attributes the attributes to set.\r\n   */\r\n  setAttributes(attributes: StringMap<string>) {\r\n    this.setProperties(attributes);\r\n  }\r\n\r\n  /**\r\n   * Sets a prop in the underlying React element.\r\n   * @see `Renderer2#setProperty`.\r\n   *\r\n   * @param name The property name.\r\n   * @param value The new value.\r\n   */\r\n  setProperty(name: string, value: any) {\r\n    this.setProperties({ [name]: value });\r\n  }\r\n\r\n  /**\r\n   * Like `setProperty` but for multiple props at once.\r\n   *\r\n   * @param properties An object with the props.\r\n   */\r\n  setProperties(properties: StringMap) {\r\n    this.setRenderPending();\r\n    Object.assign(this._props, removeUndefinedProperties(properties));\r\n  }\r\n\r\n  /**\r\n   * Remove a prop or an attribute from the underlying React element.\r\n   * @see `Renderer2#removeAttribute`.\r\n   *\r\n   * @param name The property name.\r\n   * @param childName _Optional_ A property of `name` to remove instead.\r\n   * @returns the deleted property\r\n   */\r\n  removeProperty(name: string, childName?: string) {\r\n    this.setRenderPending();\r\n    if (childName) {\r\n      return delete this._props[name][childName];\r\n    }\r\n\r\n    return delete this._props[name];\r\n  }\r\n\r\n  /**\r\n   * Add a direct child of this node.\r\n   * @see `Renderer2#addChild`.\r\n   *\r\n   * @param node The node to add.\r\n   */\r\n  addChild(node: ReactNode) {\r\n    this.setRenderPending();\r\n    this._children.push(node);\r\n  }\r\n\r\n  /**\r\n   * Remove a direct child of this node.\r\n   * @see `Renderer2#removeChild`.\r\n   *\r\n   * @param node The node to remove.\r\n   */\r\n  removeChild(node: ReactNode) {\r\n    this.setRenderPending();\r\n    this._children = this._children.filter(child => child !== node);\r\n  }\r\n\r\n  /**\r\n   * Cast the node to a comment node.\r\n   * @see `Renderer2#createComment`.\r\n   *\r\n   * @param value the text in the comment to render.\r\n   * @returns itself.\r\n   */\r\n  asComment(value: string) {\r\n    this.setRenderPending();\r\n    this.type = undefined;\r\n    this._comment = value;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Cast the node to a text node.\r\n   * @see `Renderer2#createText`.\r\n   *\r\n   * @param value the text to render.\r\n   * @returns itself.\r\n   */\r\n  asText(value: string) {\r\n    this.setRenderPending();\r\n    this.type = undefined;\r\n    this._text = value;\r\n\r\n    // Skip appending and rendering of empty text nodes. This may cause a bug\r\n    // if a single space is desired...\r\n    if (!value || !value.trim()) {\r\n      this._isNotRenderable = true;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Render the node to the DOM, or unmount it, as necessary.\r\n   *\r\n   * @returns itself.\r\n   */\r\n  render(): ReactNode {\r\n    // Only complete render operations for ReactNodes that are parented by HTMLElements.\r\n    // Those that are parented by other ReactNodes will be rendered recursively by their\r\n    // parent.\r\n    if (!isReactNode(this._parent)) {\r\n      if (this._isDestroyPending && this._parent) {\r\n        if (DEBUG) {\r\n          console.log('ReactNode > render > destroy > node:', this.toString(), 'parent:', this.parent);\r\n        }\r\n        ReactDOM.unmountComponentAtNode(this._parent);\r\n        return this;\r\n      }\r\n\r\n      if (this._isRenderPending) {\r\n        if (DEBUG) {\r\n          console.log('ReactNode > render > node:', this.toString(), 'parent:', this.parent);\r\n        }\r\n        // It is expected that the element will be recreated and re-rendered with each attribute change.\r\n        // See: https://reactjs.org/docs/rendering-elements.html\r\n        ReactDOM.render(this._renderRecursive() as React.ReactElement<{}>, this._parent);\r\n        this._isRenderPending = false;\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Appends a child.\r\n   *\r\n   * @see `Renderer2#appendChild`.\r\n   * @note This is called by Angular core when projected content is being added.\r\n   *\r\n   * @param projectedContent the content to project.\r\n   */\r\n  appendChild(projectedContent: HTMLElement | Node) {\r\n    if (DEBUG) {\r\n      console.error(\r\n        'ReactNode > appendChild > node:',\r\n        this.toString(),\r\n        'projectedContent:',\r\n        projectedContent.toString().trim()\r\n      );\r\n    }\r\n    this._childrenToAppend.push(projectedContent);\r\n  }\r\n\r\n  /**\r\n   * @note for easier debugging.\r\n   */\r\n  toString(): string {\r\n    if (this._typeName) {\r\n      return `[${this._typeName} ReactNode]`;\r\n    }\r\n\r\n    if (this._text) {\r\n      return '[text ReactNode]';\r\n    }\r\n\r\n    if (this._comment) {\r\n      return '[comment ReactNode]';\r\n    }\r\n\r\n    return '[undefined ReactNode]';\r\n  }\r\n\r\n  private _renderRecursive(key?: string): React.ReactElement<{}> | string {\r\n    const children = this._children\r\n      ? this._children.map((child, index) => child._renderRecursive(index.toString()))\r\n      : [];\r\n\r\n    if (this._text) {\r\n      return this._text;\r\n    }\r\n\r\n    this._props[CHILDREN_TO_APPEND_PROP] = this._childrenToAppend;\r\n\r\n    if (key) {\r\n      this._props['key'] = key;\r\n    }\r\n\r\n    // Just having some props on a React element can cause it to\r\n    // behave undesirably, and since the templates are hard-coded to pass\r\n    // all Inputs all the time, they pass `undefined` values too.\r\n    // This ensures these are removed.\r\n    // Additionally, there are some things that Angular templating forbids,\r\n    // and stops at-compile time (with errors), such as `Input`s being prefixed with `on`.\r\n    // Since React does not have the notion of `Output`s as Angular (they are just props of type function, essentially callbacks).\r\n    // To work around this, we, by convention, prefix any PascalCased prop with `on` here, after the template has already been compiled.\r\n    const clearedProps = this._transformProps(removeUndefinedProperties(this._props));\r\n\r\n    if (DEBUG) {\r\n      console.warn(\r\n        'ReactNode > renderRecursive > type:',\r\n        this.toString(),\r\n        'props:',\r\n        this._props,\r\n        'children:',\r\n        children\r\n      );\r\n    }\r\n    return React.createElement(this.type, clearedProps, children.length > 0 ? children : undefined);\r\n  }\r\n\r\n  private _transformProps<TProps extends object>(props: TProps) {\r\n    return Object.entries(props).reduce((acc, [key, value]) => {\r\n      const [newKey, newValue] = typeof key !== 'string' ? [key, value] : this._transformProp(key, value);\r\n      return Object.assign(acc, { [newKey]: newValue });\r\n    }, {});\r\n  }\r\n\r\n  private _transformProp<TValue = any>(name: string, value: TValue): [string, TValue] {\r\n    // prop name is camelCased already\r\n    const firstLetter = name[0];\r\n    if (firstLetter === firstLetter.toLowerCase()) {\r\n      return [name, value];\r\n    }\r\n\r\n    // prop name is PascalCased & is a function - assuming render prop or callback prop that has return value\r\n    // NOTE: Angular doesn't allow passing @Inputs that are prefixed with \"on\". This is useful for render props and properties representing the \"on\" state (for example, Toggle).\r\n    // As a convention, any @Input that starts with a capital letter is prefixed with \"on\" when passed as a prop to the underlying React component.\r\n    return [`on${name}`, value];\r\n  }\r\n\r\n  private _tryResolveTypeIsReactElementClass() {\r\n    if (this._typeIsReactElementClass === undefined) {\r\n      // Comments and text have no type.\r\n      if (!this.type) {\r\n        return;\r\n      }\r\n\r\n      // Store the name of the type for the toString message (debugging).\r\n      this._typeName = this.type as string;\r\n\r\n      // Attempt to resolve the type as a React Element class name/type.\r\n      // Since Angular templates are just strings, we can't include types in them.\r\n      // Therefore, we use the component registry to resolve the type of a component from a string.\r\n      if (typeof this.type === 'string') {\r\n        this.type = getComponentClass(this.type);\r\n      }\r\n\r\n      // If type is still a string, then no React Element matches this string.\r\n      this._typeIsReactElementClass = typeof this.type !== 'string';\r\n\r\n      if (DEBUG) {\r\n        console.log('ReactNode > tryResolveTypeIsReactElementClass > type:', this._typeName);\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Monkey-patches `Element`'s `addEventListener` & `removeEventListener` and adds `getEventListeners`.\r\n * This later allows the renderer to emit any event handlers attached to React-wrapped components as Angular Outputs:\r\n * ```html\r\n * <my-component (arbitraryEvent)=\"onEventHandler($event)\"></my-component>\r\n * ```\r\n *\r\n * @note Taken and modified from https://github.com/colxi/getEventListeners to be compiled into ES5, allowing running in older browsers\r\n **/\r\n\r\nElement.prototype['_addEventListener'] = Element.prototype.addEventListener;\r\nElement.prototype['_removeEventListener'] = Element.prototype.removeEventListener;\r\n\r\nElement.prototype.addEventListener = function<K extends keyof ElementEventMap>(\r\n  type: K,\r\n  listener: (this: Element, ev: ElementEventMap[K]) => any,\r\n  options?: boolean | AddEventListenerOptions\r\n): void {\r\n  if (options === undefined) options = false;\r\n\r\n  // declare listener\r\n  this._addEventListener(type, listener, options);\r\n\r\n  if (!this.eventListenerList) this.eventListenerList = {};\r\n  if (!this.eventListenerList[type]) this.eventListenerList[type] = [];\r\n\r\n  // add listener to  event tracking list\r\n  this.eventListenerList[type].push({\r\n    type: type,\r\n    listener: listener,\r\n    useCapture: options,\r\n  });\r\n};\r\n\r\nElement.prototype.removeEventListener = function<K extends keyof ElementEventMap>(\r\n  type: K,\r\n  listener: (this: Element, ev: ElementEventMap[K]) => any,\r\n  options?: boolean | EventListenerOptions\r\n): void {\r\n  if (options === undefined) options = false;\r\n\r\n  // remove listener\r\n  this._removeEventListener(type, listener, options);\r\n\r\n  if (!this.eventListenerList) this.eventListenerList = {};\r\n  if (!this.eventListenerList[type]) this.eventListenerList[type] = [];\r\n\r\n  // Find the event in the list, If a listener is registered twice, one\r\n  // with capture and one without, remove each one separately. Removal of\r\n  // a capturing listener does not affect a non-capturing version of the\r\n  // same listener, and vice versa.\r\n  for (let i = 0; i < this.eventListenerList[type].length; i++) {\r\n    if (\r\n      this.eventListenerList[type][i].listener === listener &&\r\n      this.eventListenerList[type][i].useCapture === options\r\n    ) {\r\n      this.eventListenerList[type].splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  // if no more events of the removed event type are left,remove the group\r\n  if (this.eventListenerList[type].length == 0) delete this.eventListenerList[type];\r\n};\r\n\r\nElement.prototype.getEventListeners = function<K extends keyof ElementEventMap>(type?: K) {\r\n  if (!this.eventListenerList) this.eventListenerList = {};\r\n\r\n  // return requested listeners type or all them\r\n  if (type === undefined) return this.eventListenerList;\r\n  return this.eventListenerList[type];\r\n};\r\n\r\n/*\r\n    Element.prototype.clearEventListeners = function(a){\r\n        if(!this.eventListenerList)\r\n            this.eventListenerList = {};\r\n        if(a==undefined){\r\n            for(var x in (this.getEventListeners())) this.clearEventListeners(x);\r\n            return;\r\n        }\r\n        var el = this.getEventListeners(a);\r\n        if(el==undefined)\r\n            return;\r\n        for(var i = el.length - 1; i >= 0; --i) {\r\n            var ev = el[i];\r\n            this.removeEventListener(a, ev.listener, ev.useCapture);\r\n        }\r\n    };\r\n    */\r\n","import { AngularReactMetadata } from '../../declarations/interfaces';\r\nimport { RendererType2 } from '@angular/core';\r\n\r\nconst KEY = 'angularReact';\r\n\r\nexport const setAngularReactMetadata = (\r\n  componentDef: {\r\n    readonly data: {\r\n      [kind: string]: any;\r\n    };\r\n  },\r\n  metadata: AngularReactMetadata\r\n): void => {\r\n  if (componentDef.data) {\r\n    componentDef.data[KEY] = metadata;\r\n  }\r\n};\r\n\r\nexport const getAngularReactMetadata = (\r\n  type: {\r\n    data: {\r\n      [kind: string]: any;\r\n    };\r\n  }\r\n): AngularReactMetadata => {\r\n  return type?.data?.[KEY] as AngularReactMetadata;\r\n};\r\n\r\nexport const isAngularReactComponent = (type: RendererType2 | null): boolean => {\r\n  return type?.data?.[KEY] != null;\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { Injectable, Renderer2, RendererStyleFlags2, RendererType2 } from '@angular/core';\r\nimport { EventManager, ɵDomRendererFactory2, ɵDomSharedStylesHost } from '@angular/platform-browser';\r\nimport { StringMap } from '../declarations/string-map';\r\nimport { Disguise } from './components/Disguise';\r\nimport { ReactContent } from './react-content';\r\nimport { isReactNode, ReactNode } from './react-node';\r\nimport { registerElement } from './registry';\r\nimport './geteventlisteners';\r\nimport { isAngularReactComponent } from '../utils/angular-react/metadata';\r\n\r\nconst DEBUG = false;\r\n\r\n@Injectable()\r\nexport class AngularReactRendererFactory extends ɵDomRendererFactory2 {\r\n  private readonly defaultReactRenderer: ReactRenderer;\r\n\r\n  // Collection of ReactNodes that can be evaluated and flushed at the\r\n  // end of Render.  This is necessary as the flow of element creation\r\n  // and update goes from \"create\" > \"insert\" > \"update\" property/attribute.\r\n  // React elements cannot be \"inserted\" and later have their props\r\n  // updated, so the \"insert\", or React.Render, can only be done once the\r\n  // element has been fully defined.  Only the topmost [root] nodes are added here.\r\n  public reactRootNodes: Set<ReactNode> = new Set();\r\n\r\n  private isRenderPending: boolean;\r\n\r\n  // This flag can only be set to true from outside.  It can only be reset\r\n  // to false from inside.  This value is reset on \"end\" when the pending\r\n  // renders are flushed.\r\n  public readonly setRenderPendingCallback = () => {\r\n    this.isRenderPending = true;\r\n  };\r\n\r\n  constructor(eventManager: EventManager, sharedStylesHost: ɵDomSharedStylesHost) {\r\n    super(eventManager, sharedStylesHost, 'app-id');\r\n\r\n    // tslint:disable-next-line: no-use-before-declare\r\n    this.defaultReactRenderer = new ReactRenderer(this);\r\n  }\r\n\r\n  createRenderer(element: any, type: RendererType2 | null): Renderer2 {\r\n    if (type.styles?.[0] === 'react-renderer' || isAngularReactComponent(type)) {\r\n      return this.defaultReactRenderer;\r\n    }\r\n\r\n    return super.createRenderer(element, type);\r\n  }\r\n\r\n  begin() {}\r\n\r\n  end() {\r\n    if (DEBUG) {\r\n      console.log(\r\n        'RootRenderer > end > isRenderPending:',\r\n        this.isRenderPending,\r\n        'reactRootNodes:',\r\n        this.reactRootNodes\r\n      );\r\n    }\r\n\r\n    // Flush any pending React element render updates.  This cannot be done\r\n    // earlier (as is done for DOM elements) because React element props\r\n    // are ReadOnly.\r\n\r\n    if (this.isRenderPending) {\r\n      // Remove root nodes that are pending destroy after render.\r\n      this.reactRootNodes = new Set(Array.from(this.reactRootNodes).filter(node => !node.render().destroyPending));\r\n      this.isRenderPending = false;\r\n    }\r\n  }\r\n}\r\n\r\nexport const isReactRendererData = (data: StringMap): data is ReactRendererData =>\r\n  data && typeof (data as ReactRendererData).addRootNode === 'function';\r\n\r\nexport interface ReactRendererData {\r\n  readonly addRootNode: (node: ReactNode) => void;\r\n}\r\n\r\nexport class ReactRenderer implements Renderer2 {\r\n  readonly data: ReactRendererData = {\r\n    addRootNode: (node: ReactNode) => {\r\n      this.rootRenderer.reactRootNodes.add(node);\r\n    },\r\n  };\r\n\r\n  constructor(public readonly rootRenderer: AngularReactRendererFactory) {\r\n    // These two elements are essential for the whole experience to be smooth for the user - register them from the get-go.\r\n    registerElement('ReactContent', () => ReactContent);\r\n    registerElement('Disguise', () => Disguise);\r\n  }\r\n\r\n  destroy(): void {}\r\n\r\n  destroyNode(node: ReactNode): void {\r\n    if (DEBUG) {\r\n      console.error('Renderer > destroyNode > node:', node.toString());\r\n    }\r\n    node.destroyNode();\r\n  }\r\n\r\n  createElement(name: string, namespace?: string): ReactNode {\r\n    if (DEBUG) {\r\n      console.error('Renderer > createElement > name:', name, namespace ? 'namespace:' : '', namespace);\r\n    }\r\n    return new ReactNode(name);\r\n  }\r\n\r\n  createComment(value: string): ReactNode {\r\n    if (DEBUG) {\r\n      console.error('Renderer > createComment > value:', value.trim());\r\n    }\r\n    return new ReactNode().asComment(value);\r\n  }\r\n\r\n  createText(value: string): ReactNode {\r\n    if (DEBUG) {\r\n      console.error('Renderer > createText > value:', value.trim());\r\n    }\r\n    return new ReactNode().asText(value);\r\n  }\r\n\r\n  appendChild(parent: HTMLElement | ReactNode, node: ReactNode | Node): void {\r\n    // Only append a child if there is a child to append.\r\n    if (!node) {\r\n      return;\r\n    }\r\n\r\n    if (node instanceof Node) {\r\n      if (DEBUG) {\r\n        console.warn('Renderer > appendChild > asNode > parent:', parent.toString(), 'node:', node.toString());\r\n      }\r\n      parent.appendChild(node);\r\n      return;\r\n    }\r\n\r\n    // Don't append empty text nodes.\r\n    if (!node.shouldRender) {\r\n      return;\r\n    }\r\n\r\n    // Provide a parent element reference to the ReactNode.  This will be used later\r\n    // once the ReactNode is fully defined and it is subsequently rendered.\r\n    if (!isReactNode(parent)) {\r\n      if (DEBUG) {\r\n        console.warn('Renderer > appendChild > asDOM > parent:', parent.toString(), 'node:', node.toString());\r\n      }\r\n      node.setRenderPendingCallback = this.rootRenderer.setRenderPendingCallback;\r\n\r\n      this.rootRenderer.reactRootNodes.add(node);\r\n      node.parent = parent;\r\n      return;\r\n    }\r\n\r\n    if (DEBUG) {\r\n      console.warn('Renderer > appendChild > asReact > parent:', parent.toString(), 'node:', node.toString());\r\n    }\r\n\r\n    node.setRenderPendingCallback = () => parent.setRenderPending();\r\n    parent.addChild(node);\r\n    node.parent = parent;\r\n  }\r\n\r\n  insertBefore(parent: HTMLElement | void, node: ReactNode, refChild: any): void {\r\n    // Only insert a child if there is a parent.\r\n    if (!parent) {\r\n      return;\r\n    }\r\n\r\n    // Provide a parent element reference to the ReactNode.  This will be used later\r\n    // once the ReactNode is fully defined and it is subsequently rendered.  In this\r\n    // case, React cannot \"insertBefore\".  Instead, we have to create a target element\r\n    // where the ReactNode can be rendered later.\r\n    if (DEBUG) {\r\n      console.warn(\r\n        'Renderer > insertBefore > asDOM > parent:',\r\n        parent.toString(),\r\n        'node:',\r\n        node.toString(),\r\n        'refChild:',\r\n        refChild.toString()\r\n      );\r\n    }\r\n    const target = document.createElement('div');\r\n    parent.insertBefore(target, refChild);\r\n    node.parent = target;\r\n    node.setRenderPendingCallback = this.rootRenderer.setRenderPendingCallback;\r\n  }\r\n\r\n  removeChild(parent: HTMLElement | ReactNode | void, node: ReactNode): void {\r\n    // Only insert a child if there is a parent.\r\n    if (!parent) {\r\n      return;\r\n    }\r\n\r\n    // Remove a parent element reference from the ReactNode.  This will be later\r\n    // result in the ReactNode unloading itself.\r\n    if (!isReactNode(parent)) {\r\n      if (DEBUG) {\r\n        console.warn('Renderer > removeChild > asDOM > parent:', parent.toString(), 'node:', node.toString());\r\n      }\r\n      node.parent = null;\r\n      return;\r\n    }\r\n\r\n    if (DEBUG) {\r\n      console.warn('Renderer > removeChild > asReact > parent:', parent.toString(), 'node:', node.toString());\r\n    }\r\n    parent.removeChild(node);\r\n  }\r\n\r\n  selectRootElement(selectorOrNode: string | any): any {\r\n    if (DEBUG) {\r\n      console.log('NOT IMPLEMENTED - Renderer > selectRootElement > selectorOrNode:', selectorOrNode);\r\n    }\r\n  }\r\n\r\n  parentNode(node: ReactNode): any {\r\n    if (DEBUG) {\r\n      console.log('NOT IMPLEMENTED - Renderer > parentNode > node:', node.toString());\r\n    }\r\n  }\r\n\r\n  nextSibling(node: any): any {\r\n    if (DEBUG) {\r\n      console.log('NOT IMPLEMENTED - Renderer > nextSibling > node:', node.toString());\r\n    }\r\n  }\r\n\r\n  setAttribute(node: ReactNode, name: string, value: string, namespace?: string): void {\r\n    if (DEBUG) {\r\n      console.log(\r\n        'Renderer > setAttribute > node:',\r\n        node.toString(),\r\n        'name:',\r\n        name,\r\n        'value:',\r\n        value,\r\n        namespace ? 'namespace:' : '',\r\n        namespace\r\n      );\r\n    }\r\n    node.setProperty(name, value);\r\n  }\r\n\r\n  removeAttribute(node: ReactNode, name: string, namespace?: string): void {\r\n    if (DEBUG) {\r\n      console.log(\r\n        'Renderer > removeAttribute > node:',\r\n        node.toString(),\r\n        'name:',\r\n        name,\r\n        namespace ? 'namespace:' : '',\r\n        namespace\r\n      );\r\n    }\r\n    node.removeProperty(name);\r\n  }\r\n\r\n  addClass(node: ReactNode, name: string): void {\r\n    if (DEBUG) {\r\n      console.log('Renderer > addClass > node:', node.toString(), 'name:', name);\r\n    }\r\n\r\n    // Update the virtual node.\r\n    // TODO: This may only support a single class name, but might work if property name is a single\r\n    //       comma-delimited list of classes...\r\n    node.setProperty('className', name);\r\n  }\r\n\r\n  removeClass(node: ReactNode, name: string): void {\r\n    if (DEBUG) {\r\n      console.log('Renderer > removeClass > node:', node.toString(), 'name:', name);\r\n    }\r\n\r\n    // Update the virtual node.\r\n    // TODO: This may not work correctly to remove a single name from a comma-delimited list.\r\n    node.removeProperty('className');\r\n  }\r\n\r\n  setStyle(node: ReactNode, style: string, value: any, flags: RendererStyleFlags2): void {\r\n    // if (DEBUG) { console.log('Renderer > setStyle > node: ', node.toString(), 'style:', style, 'value:', value, 'flags:', flags); }\r\n    if (flags & RendererStyleFlags2.DashCase) {\r\n      node.setProperty('style', { style: value + !!(flags & RendererStyleFlags2.Important) ? ' !important' : '' });\r\n    } else {\r\n      node.setProperty('style', { style: value });\r\n    }\r\n  }\r\n\r\n  removeStyle(node: ReactNode, style: string, flags: RendererStyleFlags2): void {\r\n    if (DEBUG) {\r\n      console.log('Renderer > removeStyle > node:', node.toString(), 'style:', style, 'flags:', flags);\r\n    }\r\n    node.removeProperty('style', style);\r\n  }\r\n\r\n  setProperty(node: ReactNode, name: string, value: any): void {\r\n    if (DEBUG) {\r\n      console.log('Renderer > setProperty > node:', node.toString(), 'name:', name, 'value:', value);\r\n    }\r\n    node.setProperty(name, value);\r\n  }\r\n\r\n  setValue(node: ReactNode, value: string): void {\r\n    if (DEBUG) {\r\n      console.log('Renderer > setValue > node:', node.toString(), 'value:', value);\r\n    }\r\n    node.setProperty('value', value);\r\n  }\r\n\r\n  listen(target: ReactNode, event: string, callback: (event: any) => boolean): () => void {\r\n    if (DEBUG) {\r\n      console.log('Renderer > listen > target:', target, 'event:', event);\r\n    }\r\n    target.setProperty(event, callback);\r\n\r\n    // TODO: NEEDS WORK: Implement prevent default callback behavior.\r\n    // return <() => void>this.eventManager.addEventListener(\r\n    //            target, event, decoratePreventDefault(callback)) as() => void;\r\n\r\n    // tslint:disable-next-line:no-unused-expression\r\n    return () => null;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule, ɵDomRendererFactory2 } from '@angular/platform-browser';\r\nimport { AngularReactRendererFactory } from './renderer/renderer';\r\n\r\n@NgModule({\r\n  imports: [BrowserModule],\r\n  exports: [BrowserModule],\r\n  providers: [{ provide: ɵDomRendererFactory2, useClass: AngularReactRendererFactory }],\r\n})\r\nexport class AngularReactBrowserModule {}\r\n","/**\r\n * Transforms an array of [key, value] tuples to an object\r\n */\r\nexport function toObject<T extends [string, any][]>(pairs: T): object {\r\n  return pairs.reduce(\r\n    (acc, [key, value]) =>\r\n      Object.assign(acc, {\r\n        [key]: value,\r\n      }),\r\n    {}\r\n  );\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/**\r\n * Delays the execution of a function to be after the next render.\r\n *\r\n * @param callback The function to execute\r\n */\r\nexport const afterRenderFinished = (callback: Function) => {\r\n  setTimeout(callback, 0);\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { EmbeddedViewRef, NgZone, TemplateRef } from '@angular/core';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Subscription } from 'rxjs';\r\nimport { throttleTime } from 'rxjs/operators';\r\n\r\nconst DEBUG = false;\r\nconst TEMPLATE_DETECT_CHANGES_THROTTLE_MS = 250;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport interface ReactTemplateProps {\r\n  /**\r\n   * Use the legacy rendering mode.\r\n   *\r\n   * Uses a similar approach to `router-outlet`, where the child elements are added to the parent, instead of this node, and this is hidden.\r\n   *\r\n   * @default false\r\n   */\r\n  legacyRenderMode?: boolean;\r\n}\r\n\r\n/**\r\n * Creates a new `ReactTemplate` element.\r\n * @param templateRef The template to render.\r\n * @param context The context to inject the template.\r\n * @param ngZone A zone used for tracking changes in the template.\r\n * @param additionalProps _Optional_. @see `ReactTemplateProps`.\r\n */\r\nexport function createReactTemplateElement<TContext extends object | void>(\r\n  templateRef: TemplateRef<TContext>,\r\n  context: TContext,\r\n  ngZone: NgZone,\r\n  additionalProps?: ReactTemplateProps\r\n) {\r\n  return React.createElement(ReactTemplate, { ngZone, templateRef, context, ...additionalProps });\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\ninterface InternalReactTemplateProps<TContext extends object | void> extends ReactTemplateProps {\r\n  ngZone: NgZone;\r\n  templateRef: TemplateRef<TContext>;\r\n  context: TContext;\r\n}\r\n\r\n/**\r\n * Render an `ng-template` as a child of a React component.\r\n * Supports two rendering modes:\r\n *  1. `legacy` - append `<react-content>` as the root, and nest the `children-to-append` underneath it.\r\n *  2. `new` (**default**) - append the `children-to-append` to the parent of this component, and hide the `<react-content>` element.\r\n *     (similar to how `router-outlet` behaves in Angular).\r\n */\r\nexport class ReactTemplate<TContext extends object | void> extends React.Component<\r\n  InternalReactTemplateProps<TContext>\r\n> {\r\n  private _embeddedViewRef: EmbeddedViewRef<TContext>;\r\n  private _ngZoneSubscription: Subscription;\r\n\r\n  componentDidUpdate() {\r\n    // Context has changes, trigger change detection after pushing the new context in\r\n    if (this.props.context != null && this._embeddedViewRef.context != null) {\r\n      Object.assign(this._embeddedViewRef.context, this.props.context);\r\n    }\r\n    this._embeddedViewRef.detectChanges();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { context, ngZone, templateRef } = this.props;\r\n\r\n    this._embeddedViewRef = templateRef.createEmbeddedView(context);\r\n    const element = ReactDOM.findDOMNode(this);\r\n    if (DEBUG) {\r\n      console.warn('ReactTemplate Component > componentDidMount > childrenToAppend:', {\r\n        rootNodes: this._embeddedViewRef.rootNodes,\r\n      });\r\n    }\r\n\r\n    const hostElement = this.props.legacyRenderMode ? element : element.parentElement;\r\n\r\n    this._embeddedViewRef.rootNodes.forEach(child => hostElement.appendChild(child));\r\n\r\n    // Detect the first cycle's changes, and then subscribe for subsequent ones.\r\n    this._embeddedViewRef.detectChanges();\r\n\r\n    // Throttling the detect changes to an empirically selected value so we don't overload too much work.\r\n    // TODO: This needs some better solution to listen to changes to the binding sources of the template.\r\n    this._ngZoneSubscription = ngZone.onStable\r\n      .pipe(throttleTime(TEMPLATE_DETECT_CHANGES_THROTTLE_MS, undefined, { leading: true, trailing: true }))\r\n      .subscribe(() => {\r\n        this._embeddedViewRef.detectChanges();\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._ngZoneSubscription.unsubscribe();\r\n\r\n    if (this._embeddedViewRef) {\r\n      this._embeddedViewRef.destroy();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // TODO: See if we can just render React.Fragment and the children within it, having no extra DOM nodes.\r\n    return React.createElement('react-template', !this.props.legacyRenderMode && { style: { display: 'none' } });\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { ComponentRef, NgZone, TemplateRef } from '@angular/core';\r\nimport { createReactContentElement, ReactContentProps } from '../renderer/react-content';\r\nimport { createReactTemplateElement } from './react-template';\r\n\r\nexport interface RenderPropContext<TContext extends object> {\r\n  readonly render: (context: TContext) => JSX.Element;\r\n}\r\n\r\nexport function isRenderPropContext<TContext extends object>(x: unknown): x is RenderPropContext<TContext> {\r\n  if (typeof x !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const maybeRenderPropContext = x as RenderPropContext<TContext>;\r\n  return maybeRenderPropContext.render && typeof maybeRenderPropContext.render === 'function';\r\n}\r\n\r\nfunction renderReactContent(rootNodes: HTMLElement[], additionalProps?: ReactContentProps): JSX.Element {\r\n  return createReactContentElement(rootNodes, additionalProps);\r\n}\r\n\r\n/**\r\n * Wrap a `TemplateRef` with a `JSX.Element`.\r\n *\r\n * @param templateRef The template to wrap\r\n * @param ngZone A zone used for tracking & triggering updates to the template\r\n * @param additionalProps optional additional props to pass to the `ReactContent` object that will render the content.\r\n */\r\nexport function createTemplateRenderer<TContext extends object>(\r\n  templateRef: TemplateRef<TContext>,\r\n  ngZone: NgZone,\r\n  additionalProps?: ReactContentProps\r\n): RenderPropContext<TContext> {\r\n  return {\r\n    render: (context: TContext) => createReactTemplateElement(templateRef, context, ngZone, additionalProps),\r\n  };\r\n}\r\n\r\n/**\r\n * Wrap a function resolving to an `HTMLElement` with a `JSX.Element`.\r\n *\r\n * @param htmlRenderFunc The function to wrap\r\n * @param additionalProps optional additional props to pass to the `ReactContent` object that will render the content.\r\n */\r\nexport function createHtmlRenderer<TContext extends object>(\r\n  htmlRenderFunc: (context: TContext) => HTMLElement,\r\n  additionalProps?: ReactContentProps\r\n): RenderPropContext<TContext> {\r\n  return {\r\n    render: context => {\r\n      const rootHtmlElement = htmlRenderFunc(context);\r\n      return renderReactContent([rootHtmlElement], additionalProps);\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * Wrap a `ComponentRef` with a `JSX.Element`.\r\n *\r\n * @param htmlRenderFunc The component reference to wrap\r\n * @param additionalProps optional additional props to pass to the `ReactContent` object that will render the content.\r\n */\r\nexport function createComponentRenderer<TContext extends object>(\r\n  componentRef: ComponentRef<TContext>,\r\n  additionalProps?: ReactContentProps\r\n): RenderPropContext<TContext> {\r\n  let renderedJsx: JSX.Element | null = null;\r\n\r\n  return {\r\n    render: context => {\r\n      if (!renderedJsx) {\r\n        renderedJsx = renderReactContent([componentRef.location.nativeElement], additionalProps);\r\n      }\r\n\r\n      Object.assign(componentRef.instance, context);\r\n      componentRef.changeDetectorRef.detectChanges();\r\n\r\n      return renderedJsx;\r\n    },\r\n  };\r\n}\r\n","import { ComponentFactoryResolver, Type, Injector, TemplateRef, ComponentRef, NgZone } from '@angular/core';\r\nimport {\r\n  RenderPropContext,\r\n  createTemplateRenderer,\r\n  createComponentRenderer,\r\n  createHtmlRenderer,\r\n  isRenderPropContext,\r\n} from '../renderer/renderprop-helpers';\r\nimport { ReactContentProps } from '../renderer/react-content';\r\n\r\nexport type JsxRenderFunc<TContext> = (context: TContext) => JSX.Element;\r\n\r\n/**\r\n * Render props options for creating & rendering a component.\r\n */\r\nexport interface RenderComponentOptions<TContext extends object> {\r\n  readonly componentType: Type<TContext>;\r\n  readonly factoryResolver: ComponentFactoryResolver;\r\n  readonly injector: Injector;\r\n}\r\n\r\nfunction isRenderComponentOptions<TContext extends object>(x: unknown): x is RenderComponentOptions<TContext> {\r\n  if (typeof x !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const maybeRenderComponentOptions = x as RenderComponentOptions<TContext>;\r\n  return (\r\n    maybeRenderComponentOptions.componentType != null &&\r\n    maybeRenderComponentOptions.factoryResolver != null &&\r\n    maybeRenderComponentOptions.injector != null\r\n  );\r\n}\r\n\r\n/**\r\n * Allow intercepting and modifying the default props, which are then used by the default renderer.\r\n */\r\nexport interface RenderPropOptions<TContext extends object> {\r\n  readonly getProps: (defaultProps?: TContext) => TContext;\r\n}\r\n\r\nfunction isRenderPropOptions<TContext extends object>(x: unknown): x is RenderPropOptions<TContext> {\r\n  if (typeof x !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const maybeRenderPropOptions = x as RenderPropOptions<TContext>;\r\n  return maybeRenderPropOptions.getProps && typeof maybeRenderPropOptions.getProps === 'function';\r\n}\r\n\r\n/**\r\n * Various options for passing renderers as render props.\r\n */\r\nexport type InputRendererOptions<TContext extends object> =\r\n  | TemplateRef<TContext>\r\n  | ((context: TContext) => HTMLElement)\r\n  | ComponentRef<TContext>\r\n  | RenderComponentOptions<TContext>\r\n  | RenderPropContext<TContext>\r\n  | RenderPropOptions<TContext>;\r\n\r\nexport function createInputJsxRenderer<TContext extends object>(\r\n  input: InputRendererOptions<TContext>,\r\n  ngZone: NgZone,\r\n  additionalProps?: ReactContentProps\r\n): JsxRenderFunc<TContext> | undefined {\r\n  if (input instanceof TemplateRef) {\r\n    const templateRenderer = createTemplateRenderer(input, ngZone, additionalProps);\r\n    return (context: TContext) => templateRenderer.render(context);\r\n  }\r\n\r\n  if (input instanceof ComponentRef) {\r\n    const componentRenderer = createComponentRenderer(input, additionalProps);\r\n    return (context: TContext) => componentRenderer.render(context);\r\n  }\r\n\r\n  if (input instanceof Function) {\r\n    const htmlRenderer = createHtmlRenderer(input, additionalProps);\r\n    return (context: TContext) => htmlRenderer.render(context);\r\n  }\r\n\r\n  if (isRenderComponentOptions(input)) {\r\n    const { componentType, factoryResolver, injector } = input;\r\n    const componentFactory = factoryResolver.resolveComponentFactory(componentType);\r\n    const componentRef = componentFactory.create(injector);\r\n\r\n    // Call the function again with the created ComponentRef<TContext>\r\n    return createInputJsxRenderer(componentRef, ngZone, additionalProps);\r\n  }\r\n}\r\n\r\nexport function createRenderPropHandler<TProps extends object>(\r\n  renderInputValue: InputRendererOptions<TProps>,\r\n  ngZone: NgZone,\r\n  options?: {\r\n    jsxRenderer?: JsxRenderFunc<TProps>;\r\n    additionalProps?: ReactContentProps;\r\n  }\r\n): (props?: TProps, defaultRender?: JsxRenderFunc<TProps>) => JSX.Element | null {\r\n  if (isRenderPropContext(renderInputValue)) {\r\n    return renderInputValue.render;\r\n  }\r\n\r\n  if (isRenderPropOptions(renderInputValue)) {\r\n    return (props?: TProps, defaultRender?: JsxRenderFunc<TProps>) => {\r\n      return typeof defaultRender === 'function' ? defaultRender(renderInputValue.getProps(props)) : null;\r\n    };\r\n  }\r\n\r\n  const renderer =\r\n    (options && options.jsxRenderer) ||\r\n    createInputJsxRenderer(renderInputValue, ngZone, options && options.additionalProps);\r\n\r\n  return (props?: TProps, defaultRender?: JsxRenderFunc<TProps>) => {\r\n    if (!renderInputValue) {\r\n      return typeof defaultRender === 'function' ? defaultRender(props) : null;\r\n    }\r\n\r\n    return renderer(props);\r\n  };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/// <reference path=\"../@types/geteventlisteners.d.ts\" />\r\n\r\nimport { AfterViewInit, ChangeDetectorRef, ElementRef, Input, NgZone, OnChanges, Renderer2, SimpleChanges, AfterContentInit, Directive } from '@angular/core';\r\nimport classnames from 'classnames';\r\nimport toStyle from 'css-to-style';\r\nimport stylenames, { StyleObject } from 'stylenames';\r\n\r\nimport { Many } from '../declarations/many';\r\nimport { ReactContentProps } from '../renderer/react-content';\r\nimport { isReactNode } from '../renderer/react-node';\r\nimport { isReactRendererData } from '../renderer/renderer';\r\nimport { toObject } from '../utils/object/to-object';\r\nimport { afterRenderFinished } from '../utils/render/render-delay';\r\nimport { InputRendererOptions, JsxRenderFunc, createInputJsxRenderer, createRenderPropHandler } from './render-props';\r\n\r\n// Forbidden attributes are still ignored, since they may be set from the wrapper components themselves (forbidden is only applied for users of the wrapper components)\r\nconst ignoredAttributeMatchers = [/^_?ng-?.*/, /^style$/, /^class$/];\r\n\r\nconst ngClassRegExp = /^ng-/;\r\n\r\nexport type ContentClassValue = string[] | Set<string> | { [klass: string]: any };\r\nexport type ContentStyleValue = string | StyleObject;\r\n\r\n/**\r\n * Optional options to pass to `ReactWrapperComponent`.\r\n */\r\nexport interface WrapperComponentOptions {\r\n  /**\r\n   * Whether the host's `display` should be set to the root child node's`display`.\r\n   * @default `false`.\r\n   */\r\n  readonly setHostDisplay?: boolean;\r\n\r\n  /**\r\n   * The zone to use to track changes to inner (Angular) templates & components.\r\n   * @default `undefined`.\r\n   */\r\n  readonly ngZone?: NgZone;\r\n}\r\n\r\nconst defaultWrapperComponentOptions: WrapperComponentOptions = {\r\n  setHostDisplay: false,\r\n};\r\n\r\n/**\r\n * Base class for Angular @Components wrapping React Components.\r\n * Simplifies some of the handling around passing down props and CSS styling on the host component.\r\n */\r\n// NOTE: TProps is not used at the moment, but a preparation for a potential future change.\r\n@Directive()\r\nexport abstract class ReactWrapperComponent<TProps extends {}> implements AfterContentInit, AfterViewInit, OnChanges {\r\n  private _contentClass: Many<ContentClassValue>;\r\n  private _contentStyle: ContentStyleValue;\r\n\r\n  private _ngZone: NgZone;\r\n  private _shouldSetHostDisplay: boolean;\r\n\r\n  protected abstract reactNodeRef: ElementRef<HTMLElement>;\r\n\r\n  /**\r\n   * Alternative to `class` and `[ngClass]` using the same syntax.\r\n   *\r\n   * @description Since this is a wrapper component, sticking to the virtual DOM concept, its DOM element shouldn't have any styling of its own.\r\n   * Instead, any value passes to `contentClass` will be passed to the root component's class as `className`.\r\n   */\r\n  @Input()\r\n  set contentClass(value: Many<ContentClassValue>) {\r\n    this._contentClass = value;\r\n    if (isReactNode(this.reactNodeRef.nativeElement)) {\r\n      this.reactNodeRef.nativeElement.setProperty('className', classnames(value));\r\n      this.markForCheck();\r\n    }\r\n  }\r\n\r\n  get contentClass(): Many<ContentClassValue> {\r\n    return this._contentClass;\r\n  }\r\n\r\n  /**\r\n   * Alternative to `style` and `[ngStyle]` using (almost) the same syntax.\r\n   * All syntax supports by `ngStyle` is supported, with the exception of specifying units in the key (`{ 'width.px': 12 }`).\r\n   *\r\n   * @description Since this is a wrapper component, sticking to the virtual DOM concept, this should have any styling of its own.\r\n   * Any value passes to `contentStyle` will be passed to the root component's style.\r\n   */\r\n  @Input()\r\n  set contentStyle(value: ContentStyleValue) {\r\n    this._contentStyle = value;\r\n    if (isReactNode(this.reactNodeRef.nativeElement)) {\r\n      const stringValue = typeof value === 'string' ? value : stylenames(value);\r\n      this.reactNodeRef.nativeElement.setProperty('style', toStyle(stringValue));\r\n      this.markForCheck();\r\n    }\r\n  }\r\n\r\n  get contentStyle(): ContentStyleValue {\r\n    return this._contentStyle;\r\n  }\r\n\r\n  /**\r\n   * Creates an instance of ReactWrapperComponent.\r\n   * @param elementRef The host element.\r\n   * @param changeDetectorRef The change detector for the component.\r\n   * @param renderer The Angular renderer.\r\n   */\r\n  constructor(\r\n    public readonly elementRef: ElementRef<HTMLElement>,\r\n    private readonly changeDetectorRef: ChangeDetectorRef,\r\n    private readonly renderer: Renderer2,\r\n    { setHostDisplay, ngZone }: WrapperComponentOptions = defaultWrapperComponentOptions\r\n  ) {\r\n    this._ngZone = ngZone;\r\n    this._shouldSetHostDisplay = setHostDisplay;\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._passAttributesAsProps();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this._shouldSetHostDisplay) {\r\n      this._setHostDisplay();\r\n    }\r\n\r\n    // NOTE: Workaround/fix for Issue #5 (https://github.com/Microsoft/angular-react/issues/5).\r\n    // The wrapper component isn't added to the root react nodes list when it's inside a `ReactContent` node, we manually add it (note that the root nodes list is a `Set`, so it won't duplicate nodes if already exist).\r\n    // There's potentially a better solution instead of this\r\n    const rendererData = this.renderer.data;\r\n    if (isReactRendererData(rendererData)) {\r\n      afterRenderFinished(() => {\r\n        const nativeElement = this.reactNodeRef.nativeElement;\r\n        if (isReactNode(nativeElement)) {\r\n          rendererData.addRootNode(nativeElement);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this._passAttributesAsProps();\r\n\r\n    this.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Mark the component as one that needed re-rendering on the React side,\r\n   * and mark for change detection on the Angular side.\r\n   */\r\n  protected markForCheck() {\r\n    if (isReactNode(this.reactNodeRef.nativeElement)) {\r\n      this.reactNodeRef.nativeElement.setRenderPending();\r\n    }\r\n\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Create an JSX renderer for an `@Input` property.\r\n   * @param input The input property.\r\n   * @param additionalProps optional additional props to pass to the `ReactContent` object that will render the content.\r\n   */\r\n  protected createInputJsxRenderer<TContext extends object>(\r\n    input: InputRendererOptions<TContext>,\r\n    additionalProps?: ReactContentProps\r\n  ): JsxRenderFunc<TContext> | undefined {\r\n    if (input === undefined) {\r\n      return undefined;\r\n    }\r\n\r\n    if (!this._ngZone) {\r\n      throw new Error('To create an input JSX renderer you must pass an NgZone to the constructor.');\r\n    }\r\n\r\n    return createInputJsxRenderer(input, this._ngZone, additionalProps);\r\n  }\r\n\r\n  /**\r\n   * Create an event handler for a render prop\r\n   * @param renderInputValue the value of the render `@Input` property.\r\n   * @param jsxRenderer an optional renderer to use.\r\n   * @param additionalProps optional additional props to pass to the `ReactContent` object that will render the content.\r\n   */\r\n  protected createRenderPropHandler<TRenderProps extends object>(\r\n    renderInputValue: InputRendererOptions<TRenderProps>,\r\n    options?: {\r\n      jsxRenderer?: JsxRenderFunc<TRenderProps>;\r\n      additionalProps?: ReactContentProps;\r\n    }\r\n  ): (props?: TRenderProps, defaultRender?: JsxRenderFunc<TRenderProps>) => JSX.Element | null {\r\n    return createRenderPropHandler(renderInputValue, this._ngZone, options);\r\n  }\r\n\r\n  private _passAttributesAsProps() {\r\n    const hostAttributes = Array.from((this.elementRef.nativeElement as HTMLElement).attributes);\r\n\r\n    if (!this.reactNodeRef || !isReactNode(this.reactNodeRef.nativeElement)) {\r\n      throw new Error('reactNodeRef must hold a reference to a ReactNode');\r\n    }\r\n\r\n    // Ensure there are no blacklisted props. Suggest alternative as error if there is any\r\n    hostAttributes.forEach(attr => {\r\n      const [forbidden, alternativeAttrName] = this._isForbiddenAttribute(attr);\r\n      if (forbidden) {\r\n        throw new Error(\r\n          `[${(this.elementRef\r\n            .nativeElement as HTMLElement).tagName.toLowerCase()}] React wrapper components cannot have the '${\r\n            attr.name\r\n          }' attribute set. Use the following alternative: ${alternativeAttrName || ''}`\r\n        );\r\n      }\r\n    });\r\n\r\n    const whitelistedHostAttributes = hostAttributes.filter(attr => !this._isIgnoredAttribute(attr));\r\n    const props = whitelistedHostAttributes.reduce(\r\n      (acc, attr) => ({\r\n        ...acc,\r\n        [attr.name]: attr.value,\r\n      }),\r\n      {}\r\n    );\r\n\r\n    const eventListeners = this.elementRef.nativeElement.getEventListeners?.();\r\n    const eventHandlersProps =\r\n      eventListeners && Object.keys(eventListeners).length\r\n        ? toObject(\r\n            Object.values(eventListeners).map<[string, React.EventHandler<React.SyntheticEvent>]>(([eventListener]) => [\r\n              eventListener.type,\r\n              (ev: React.SyntheticEvent) => eventListener.listener(ev && ev.nativeEvent),\r\n            ])\r\n          )\r\n        : {};\r\n    {\r\n    }\r\n\r\n    this.reactNodeRef.nativeElement.setProperties({ ...props, ...eventHandlersProps });\r\n  }\r\n\r\n  private _setHostDisplay() {\r\n    const nativeElement = this.elementRef.nativeElement;\r\n\r\n    // We want to wait until child elements are rendered\r\n    requestAnimationFrame(() => {\r\n      if (nativeElement.firstElementChild) {\r\n        const rootChildDisplay = getComputedStyle(nativeElement.firstElementChild).display;\r\n        nativeElement.style.display = rootChildDisplay;\r\n      }\r\n    });\r\n  }\r\n\r\n  private _isIgnoredAttribute(attr: Attr) {\r\n    return ignoredAttributeMatchers.some(regExp => regExp.test(attr.name));\r\n  }\r\n\r\n  private _isForbiddenAttribute(attr: Attr): [boolean, string | undefined] {\r\n    const { name, value } = attr;\r\n\r\n    if (name === 'key') return [true, undefined];\r\n    if (name === 'class' && value.split(' ').some(className => !ngClassRegExp.test(className)))\r\n      return [true, 'contentClass'];\r\n    if (name === 'style') {\r\n      const style = toStyle(value);\r\n      // Only allowing style if it's something that changes the display - setting anything else should be done on the child component directly (via the `styles` attribute in fabric for example)\r\n      if (Object.entries(style).filter(([key, value]) => value && key !== 'display').length > 0) {\r\n        return [true, 'contentStyle'];\r\n      }\r\n    }\r\n\r\n    return [false, undefined];\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nexport * from './known-keys';\r\nexport * from './many';\r\nexport * from './omit';\r\nexport * from './string-map';\r\nexport * from './interfaces';\r\n","import { Type, ɵNG_COMP_DEF, ɵComponentDef } from '@angular/core'\r\nimport { AngularReactMetadata } from '../declarations/interfaces';\r\nimport { setAngularReactMetadata } from '../utils/angular-react/metadata';\r\n\r\nexport function AngularReact(metadata?: AngularReactMetadata) {\r\n  return <T>(componentType: Type<T>) => {\r\n    Promise.resolve().then(() => {\r\n      const componentDef: ɵComponentDef<T> = componentType[ɵNG_COMP_DEF];\r\n\r\n      if (componentDef === undefined) {\r\n        throw new Error('Ivy is not enabled.');\r\n      }\r\n\r\n      setAngularReactMetadata(componentDef, metadata ?? {});\r\n    });\r\n\r\n    return componentType as any;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nexport { AngularReactBrowserModule } from './lib/angular-react-browser.module';\r\nexport * from './lib/components/wrapper-component';\r\nexport * from './lib/declarations/public-api';\r\nexport * from './lib/renderer/components/Disguise';\r\nexport { getPassProps, passProp, PassProp } from './lib/renderer/pass-prop-decorator';\r\nexport { createReactContentElement, ReactContent, ReactContentProps } from './lib/renderer/react-content';\r\nexport * from './lib/renderer/react-template';\r\nexport { registerElement } from './lib/renderer/registry';\r\nexport {\r\n  JsxRenderFunc,\r\n  RenderComponentOptions,\r\n  InputRendererOptions,\r\n  RenderPropOptions,\r\n} from './lib/components/render-props';\r\nexport * from './lib/decorators/index';\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nexport * from './src/public-api';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["DEBUG","dom.isNodeInDOM"],"mappings":"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"}