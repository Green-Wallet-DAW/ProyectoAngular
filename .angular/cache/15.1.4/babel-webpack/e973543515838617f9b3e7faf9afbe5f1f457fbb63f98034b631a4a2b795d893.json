{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet EditComponent = class EditComponent {\n  // form: { name: any; email: any; phone_number: any; cumn: any; newsletter: any; };\n  constructor(authService, user, router) {\n    this.authService = authService;\n    this.user = user;\n    this.router = router;\n    this.isSuccessful = false;\n    this.isSignUpFailed = false;\n    this.errorMessage = '';\n    this.enter = -1;\n    this.formUpdate = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(40)]),\n      email: new FormControl('', [Validators.required, Validators.maxLength(100)]),\n      phone_number: new FormControl('', [Validators.required]),\n      cumn: new FormControl(''),\n      newsletter: new FormControl(true, [Validators.required])\n    });\n    this.loading = false;\n  }\n  ngOnInit() {\n    this.loading = true;\n    console.log(this.user.getPublicContent());\n    this.user.getPublicContent().subscribe(result => {\n      this.currectUser = result;\n      this.loading = false;\n      this.formUpdate.setValue({\n        name: this.currentUser.success.name,\n        email: this.currentUser.success.email,\n        phone_number: this.currentUser.success.phone_number,\n        cumn: this.currentUser.success.cumn,\n        newsletter: this.currentUser.success.newsletter\n      });\n    }, error => {\n      this.errorMessage = '';\n      if (error instanceof ErrorEvent) {\n        this.errorMessage = error.error.message;\n      } else if (error.status == 404) {\n        this.errorMessage = \"Error 404\";\n      } else {\n        this.errorMessage = \"Error status:\" + error.status;\n      }\n      this.loading = false;\n    });\n  }\n  onSubmit() {\n    if (this.formUpdate.valid) {\n      const name = this.formUpdate.value.name;\n      const email = this.formUpdate.value.email;\n      const phone_number = this.formUpdate.value.phone_number;\n      const cumn = this.formUpdate.value.cumn;\n      const newsletter = this.formUpdate.value.newsletter;\n      // const newsletter = this.formUpdate.value.newsletter ? 1 : 0; This for a 1/0 return\n      this.loading = true;\n      // console.log(this.form);\n      this.authService.update(name, email, phone_number, cumn, newsletter).subscribe(result => {\n        // console.log(data);\n        this.loading = false;\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n        this.enter = 1;\n        this.toastr.success('Your information has been updated successfully!', 'Profile updated', {\n          positionClass: 'toast-bottom-right',\n          timeout: 2000\n        });\n        setTimeout(() => {\n          this.router.navigate(['/profile']);\n        }, 50);\n      }, error => {\n        this.isSignUpFailed = true;\n        this.loading = false;\n        this.enter = 0;\n        this.errorMessage = '';\n        if (error instanceof ErrorEvent) {\n          this.errorMessage = error.error.message;\n        } else {\n          this.errorMessage = \"Error status: \" + error.status;\n        }\n      });\n    } else {\n      this.toastr.error(\"The form did not validated correctly\", 'ERROR UPDATING PROFILE', {\n        positionClass: 'toast-bottom-right'\n      });\n    }\n  }\n};\nEditComponent = __decorate([Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})], EditComponent);\nexport { EditComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","FormGroup","Validators","EditComponent","constructor","authService","user","router","name","required","minLength","maxLength","email","phone_number","cumn","newsletter","ngOnInit","loading","console","log","getPublicContent","subscribe","result","currectUser","formUpdate","setValue","currentUser","success","error","errorMessage","ErrorEvent","message","status","onSubmit","valid","value","update","isSuccessful","isSignUpFailed","enter","toastr","positionClass","timeout","setTimeout","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/alumno/Escritorio/GreenWallet/ProyectoAngular/src/app/edit/edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../_services/auth.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { UserService } from '../_services/user.service';\n\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit{\n  [x: string]: any;\n  \n  // public  name: string | null;\n  // public  email: string | null;\n  // public  phone_number: string | null;\n  // public  cumn: string | null;\n  // public newsletter: any;\n\n  public currentUser: any;\n\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n  public enter = -1;\n  formUpdate = new FormGroup({\n    name: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(40)]),\n    email: new FormControl('', [Validators.required, Validators.maxLength(100)]),\n    phone_number: new FormControl('', [Validators.required]),\n    cumn: new FormControl(''),\n    newsletter: new FormControl(true, [Validators.required]),\n  });\n  public loading = false;\n  // form: { name: any; email: any; phone_number: any; cumn: any; newsletter: any; };\n  constructor(private authService: AuthService, private user: rService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.loading = true;\n    console.log(this.user.getPublicContent());\n    this.user.getPublicContent()\n    .subscribe(\n      result =>{\n        this.currectUser = result;\n        this.loading = false;\n        this.formUpdate.setValue({\n          name: this.currentUser.success.name,\n          email: this.currentUser.success.email,\n          phone_number: this.currentUser.success.phone_number,\n          cumn: this.currentUser.success.cumn,\n          newsletter: this.currentUser.success.newsletter\n        });\n      },\n      error => {\n        this.errorMessage = '';\n        if (error instanceof ErrorEvent) {\n          this.errorMessage = error.error.message;\n        } else if (error.status == 404) {\n          this.errorMessage = \"Error 404\";\n        } else {\n          this.errorMessage = \"Error status:\" + error.status;\n        }\n        this.loading = false;\n      }\n    );\n  }\n\n  onSubmit(): void {\n    if(this.formUpdate.valid){\n      const name = this.formUpdate.value.name!;\n      const email = this.formUpdate.value.email!;\n      const phone_number = this.formUpdate.value.phone_number!;\n      const cumn = this.formUpdate.value.cumn!;\n      const newsletter = this.formUpdate.value.newsletter;\n      // const newsletter = this.formUpdate.value.newsletter ? 1 : 0; This for a 1/0 return\n      this.loading = true;\n\n      // console.log(this.form);\n      this.authService.update(name, email, phone_number, cumn, newsletter).subscribe(\n        result => {\n          // console.log(data);\n          this.loading = false;\n          this.isSuccessful = true;\n          this.isSignUpFailed = false;\n          this.enter = 1;\n          this.toastr.success('Your information has been updated successfully!', 'Profile updated', {positionClass: 'toast-bottom-right', timeout:2000});\n          setTimeout(() => {\n            this.router.navigate(['/profile']);\n          }, 50);\n        },\n        error => {\n          this.isSignUpFailed = true;\n          this.loading = false;\n          this.enter = 0;\n          this.errorMessage = '';\n          if(error instanceof ErrorEvent){\n            this.errorMessage = error.error.message;\n          }else{\n            this.errorMessage = \"Error status: \" + error.status;\n          }\n        }\n      );\n    }else{\n      this.toastr.error(\"The form did not validated correctly\", 'ERROR UPDATING PROFILE', {positionClass: 'toast-bottom-right'});\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}