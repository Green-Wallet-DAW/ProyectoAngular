{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from './user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/auth.service\";\nimport * as i2 from \"../_services/user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction EditComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"span\", 27);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EditComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field cannot be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditComponent_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"The name must be at least 5 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"The name must be at least 40 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditComponent_span_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field cannot be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditComponent_span_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"The name must be at least 100 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditComponent_span_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field cannot be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class EditComponent {\n  // form: { name: any; email: any; phone_number: any; cumn: any; newsletter: any; };\n  constructor(authService, token, router, toastr) {\n    this.authService = authService;\n    this.token = token;\n    this.router = router;\n    this.toastr = toastr;\n    this.isSuccessful = false;\n    this.isSignUpFailed = false;\n    this.errorMessage = '';\n    this.enter = -1;\n    this.formUpdate = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(40)]),\n      email: new FormControl('', [Validators.required, Validators.maxLength(100)]),\n      phone_number: new FormControl('', [Validators.required]),\n      cumn: new FormControl(''),\n      newsletter: new FormControl(true, [Validators.required])\n    });\n    this.loading = false;\n    this.user = new User('', '', '', '', false);\n  }\n  ngOnInit() {\n    this.loading = true;\n    this.token.getPublicContent().subscribe(result => {\n      // console.log(\"entra result\");\n      this.user = result;\n      this.loading = false;\n      this.formUpdate.setValue({\n        // name: this.user[0].name,\n        name: this.user[0].name,\n        email: this.user[0].email,\n        phone_number: this.user[0].phone_number,\n        cumn: this.user[0].cumn,\n        newsletter: this.user[0].newsletter\n      });\n    }, error => {\n      this.errorMessage = '';\n      if (error instanceof ErrorEvent) {\n        this.errorMessage = error.error.message;\n      } else if (error.status == 404) {\n        this.errorMessage = \"Error 404\";\n      } else {\n        this.errorMessage = \"Error status:\" + error.status;\n      }\n      this.loading = false;\n    });\n  }\n  onSubmit() {\n    if (this.formUpdate.valid) {\n      this.user[0].name = this.formUpdate.value.name;\n      this.user[0].email = this.formUpdate.value.email;\n      this.user[0].phone_number = this.formUpdate.value.phone_number;\n      this.user[0].cumn = this.formUpdate.value.cumn;\n      this.user[0].newsletter = this.formUpdate.value.newsletter;\n      // const newsletter = this.formUpdate.value.newsletter ? 1 : 0; This for a 1/0 return\n      this.loading = true;\n      // console.log(this.form);\n      this.authService.update(this.user[0].name, this.user[0].email, this.user[0].phone_number, this.user[0].cumn, this.user[0].newsletter).subscribe(result => {\n        // console.log(data);\n        this.loading = false;\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n        this.enter = 1;\n        this.toastr.success('Your information has been updated successfully!', 'Profile updated', {\n          positionClass: 'toast-bottom-right',\n          timeOut: 2000\n        });\n        setTimeout(() => {\n          this.router.navigate(['/profile']);\n        }, 50);\n      }, error => {\n        this.isSignUpFailed = true;\n        this.loading = false;\n        this.enter = 0;\n        this.errorMessage = '';\n        if (error instanceof ErrorEvent) {\n          this.errorMessage = error.error.message;\n        } else {\n          this.errorMessage = \"Error status: \" + error.status;\n        }\n      });\n    } else {\n      this.toastr.error(\"The form did not validated correctly\", 'ERROR UPDATING PROFILE', {\n        positionClass: 'toast-bottom-right'\n      });\n    }\n  }\n}\nEditComponent.ɵfac = function EditComponent_Factory(t) {\n  return new (t || EditComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService));\n};\nEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditComponent,\n  selectors: [[\"app-edit\"]],\n  decls: 42,\n  vars: 9,\n  consts: [[\"id\", \"con\", 1, \"row\"], [1, \"container\", \"d-flex\", \"align-items-center\", \"justify-content-center\"], [1, \"card\", \"text-center\", \"my-3\"], [1, \"card-header\", \"titulos\"], [\"class\", \"ms-3 spinner-border text-primary\", \"role\", \"status\", 4, \"ngIf\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"mt-4\", \"text-start\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-3\"], [1, \"col-12\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\"], [4, \"ngIf\"], [1, \"col-12\", \"mt-2\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"phone_number\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"phone_number\", \"formControlName\", \"phone_number\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"cumn\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"cumn\", \"formControlName\", \"cumn\", 1, \"form-control\"], [1, \"col-12\", \"my-2\", \"form-check\", \"form-switch\"], [\"type\", \"checkbox\", \"id\", \"newsletter\", \"role\", \"switch\", \"formControlName\", \"newsletter\", 1, \"form-check-input\", \"form-control\"], [\"for\", \"newsletter\", 1, \"form-check-label\"], [1, \"my-3\", \"text-center\"], [\"type\", \"text\", \"routerLink\", \"/profile\", 1, \"btn\", \"btn-success\", \"btn-lg\", \"me-3\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"btn-lg\", 3, \"disabled\"], [\"role\", \"status\", 1, \"ms-3\", \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"]],\n  template: function EditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵtext(4, \"Edit your profile \");\n      i0.ɵɵtemplate(5, EditComponent_div_5_Template, 3, 0, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"h5\", 6);\n      i0.ɵɵtext(8, \"Enter the data you want modified\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function EditComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"div\", 9)(12, \"label\", 10);\n      i0.ɵɵtext(13, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 11);\n      i0.ɵɵtemplate(15, EditComponent_span_15_Template, 2, 0, \"span\", 12);\n      i0.ɵɵtemplate(16, EditComponent_span_16_Template, 2, 0, \"span\", 12);\n      i0.ɵɵtemplate(17, EditComponent_span_17_Template, 2, 0, \"span\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 13)(19, \"label\", 14);\n      i0.ɵɵtext(20, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 15);\n      i0.ɵɵtemplate(22, EditComponent_span_22_Template, 2, 0, \"span\", 12);\n      i0.ɵɵtemplate(23, EditComponent_span_23_Template, 2, 0, \"span\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 13)(25, \"label\", 16);\n      i0.ɵɵtext(26, \"Phone number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 17);\n      i0.ɵɵtemplate(28, EditComponent_span_28_Template, 2, 0, \"span\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 13)(30, \"label\", 18);\n      i0.ɵɵtext(31, \"Credit Union Member Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"input\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 20);\n      i0.ɵɵelement(34, \"input\", 21);\n      i0.ɵɵelementStart(35, \"label\", 22);\n      i0.ɵɵtext(36, \"I wish to receive updates and news about Green Wallet (NO/YES)\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(37, \"div\", 23)(38, \"button\", 24);\n      i0.ɵɵtext(39, \"Return\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"button\", 25);\n      i0.ɵɵtext(41, \"Submit\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      let tmp_6_0;\n      let tmp_7_0;\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.formUpdate);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.formUpdate.get(\"name\")) == null ? null : tmp_2_0.touched) && ((tmp_2_0 = ctx.formUpdate.get(\"name\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"required\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.formUpdate.get(\"name\")) == null ? null : tmp_3_0.touched) && ((tmp_3_0 = ctx.formUpdate.get(\"name\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors[\"minLength\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.formUpdate.get(\"name\")) == null ? null : tmp_4_0.touched) && ((tmp_4_0 = ctx.formUpdate.get(\"name\")) == null ? null : tmp_4_0.errors == null ? null : tmp_4_0.errors[\"maxLength\"]));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.formUpdate.get(\"email\")) == null ? null : tmp_5_0.touched) && ((tmp_5_0 = ctx.formUpdate.get(\"email\")) == null ? null : tmp_5_0.errors == null ? null : tmp_5_0.errors[\"required\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.formUpdate.get(\"email\")) == null ? null : tmp_6_0.touched) && ((tmp_6_0 = ctx.formUpdate.get(\"email\")) == null ? null : tmp_6_0.errors == null ? null : tmp_6_0.errors[\"maxLength\"]));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.formUpdate.get(\"phone_number\")) == null ? null : tmp_7_0.touched) && ((tmp_7_0 = ctx.formUpdate.get(\"phone_number\")) == null ? null : tmp_7_0.errors == null ? null : tmp_7_0.errors[\"required\"]));\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"disabled\", !ctx.formUpdate);\n    }\n  },\n  dependencies: [i5.NgIf, i3.RouterLink, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.CheckboxControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.FormGroupDirective, i6.FormControlName],\n  styles: [\"#con[_ngcontent-%COMP%]{\\n    min-height: 85vh;\\n}\\n.card[_ngcontent-%COMP%]{\\n    width: 90%;\\n    opacity: 0.96;\\n}\\n.card[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{\\n    font-size: 22px;\\n}\\n.titulos[_ngcontent-%COMP%]{\\n    font-size: 30px;\\n}\\nspan[_ngcontent-%COMP%]{\\n    color: red;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZWRpdC9lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLFVBQVU7SUFDVixhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxlQUFlO0FBQ25CO0FBQ0E7SUFDSSxlQUFlO0FBQ25CO0FBQ0E7SUFDSSxVQUFVO0FBQ2QiLCJzb3VyY2VzQ29udGVudCI6WyIjY29ue1xuICAgIG1pbi1oZWlnaHQ6IDg1dmg7XG59XG4uY2FyZHtcbiAgICB3aWR0aDogOTAlO1xuICAgIG9wYWNpdHk6IDAuOTY7XG59XG4uY2FyZCBoNXtcbiAgICBmb250LXNpemU6IDIycHg7XG59XG4udGl0dWxvc3tcbiAgICBmb250LXNpemU6IDMwcHg7XG59XG5zcGFue1xuICAgIGNvbG9yOiByZWQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","User","i0","EditComponent","constructor","authService","token","router","toastr","name","required","minLength","maxLength","email","phone_number","cumn","newsletter","user","ngOnInit","loading","getPublicContent","subscribe","result","formUpdate","setValue","error","errorMessage","ErrorEvent","message","status","onSubmit","valid","value","update","isSuccessful","isSignUpFailed","enter","success","positionClass","timeOut","setTimeout","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/alumno/Escritorio/GreenWallet/ProyectoAngular/src/app/edit/edit.component.ts","/home/alumno/Escritorio/GreenWallet/ProyectoAngular/src/app/edit/edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../_services/auth.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { UserService } from '../_services/user.service';\nimport { User } from './user';\n\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit{\n  \n  // public  name: string | null;\n  // public  email: string | null;\n  // public  phone_number: string | null;\n  // public  cumn: string | null;\n  // public newsletter: any;\n\n  public user: any;\n\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n  public enter = -1;\n\n  formUpdate = new FormGroup({\n    name: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(40)]),\n    email: new FormControl('', [Validators.required, Validators.maxLength(100)]),\n    phone_number: new FormControl('', [Validators.required]),\n    cumn: new FormControl(''),\n    newsletter: new FormControl(true, [Validators.required]),\n  });\n  public loading = false;\n  // form: { name: any; email: any; phone_number: any; cumn: any; newsletter: any; };\n\n  constructor(private authService: AuthService, private token: UserService, private router: Router, private toastr: ToastrService) {\n    this.user = new User('','','','', false);\n   }\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.token.getPublicContent()\n    .subscribe(\n      result =>{\n        // console.log(\"entra result\");\n        this.user = result;\n        this.loading = false;\n        this.formUpdate.setValue({\n          // name: this.user[0].name,\n          name: this.user[0].name,\n\n          email: this.user[0].email,\n          phone_number: this.user[0].phone_number,\n          cumn: this.user[0].cumn,\n          newsletter: this.user[0].newsletter\n        });\n      },\n      error => {\n        this.errorMessage = '';\n        if (error instanceof ErrorEvent) {\n          this.errorMessage = error.error.message;\n        } else if (error.status == 404) {\n          this.errorMessage = \"Error 404\";\n        } else {\n          this.errorMessage = \"Error status:\" + error.status;\n        }\n        this.loading = false;\n      }\n      \n    );\n  }\n\n  onSubmit(): void {\n    if(this.formUpdate.valid){\n      this.user[0].name = this.formUpdate.value.name!;\n      this.user[0].email  = this.formUpdate.value.email!;\n      this.user[0].phone_number  = this.formUpdate.value.phone_number!;\n      this.user[0].cumn  = this.formUpdate.value.cumn!;\n      this.user[0].newsletter  = this.formUpdate.value.newsletter;\n      // const newsletter = this.formUpdate.value.newsletter ? 1 : 0; This for a 1/0 return\n      this.loading = true;\n\n      // console.log(this.form);\n      this.authService.update(this.user[0].name, this.user[0].email, this.user[0].phone_number, this.user[0].cumn, this.user[0].newsletter,).subscribe(\n        result => {\n          // console.log(data);\n          this.loading = false;\n          this.isSuccessful = true;\n          this.isSignUpFailed = false;\n          this.enter = 1;\n          this.toastr.success('Your information has been updated successfully!', 'Profile updated', {positionClass: 'toast-bottom-right', timeOut:2000});\n          setTimeout(() => {\n            this.router.navigate(['/profile']);\n          }, 50);\n        },\n        error => {\n          this.isSignUpFailed = true;\n          this.loading = false;\n          this.enter = 0;\n          this.errorMessage = '';\n          if(error instanceof ErrorEvent){\n            this.errorMessage = error.error.message;\n          }else{\n            this.errorMessage = \"Error status: \" + error.status;\n          }\n        }\n      );\n    }else{\n      this.toastr.error(\"The form did not validated correctly\", 'ERROR UPDATING PROFILE', {positionClass: 'toast-bottom-right'});\n    }\n  }\n}\n","<!-- <div class=\"container\" *ngIf=\"currentUser; else loggedOut\">\n    <header class=\"jumbotron\">\n      <h3>\n        Edit your profile\n      </h3>\n    </header>\n    <div>\n      <strong>Username:</strong>\n      <input type=\"text\" value=\"{{ currentUser.success.name }}\">\n    </div>\n    <div>\n      <strong>Email:</strong>\n      <input type=\"text\" value=\"{{ currentUser.success.email }}\">\n    </div>\n    <div>\n        <strong>Phone number:</strong>\n        <input type=\"text\" value=\"{{ currentUser.success.phone_number }}\">\n    </div>\n    <div>\n        <strong>Credit Union Member Number:</strong>\n        <input type=\"text\" value=\"{{ currentUser.success.cumn }}\">\n        \n    </div>\n    <div class=\"form-group\">\n      <input\n        type=\"checkbox\"\n        name=\"newsletter\"\n        id=\"newsletter\"\n        style=\"margin-right: 10px; height: 20px; width: 20px;\"\n        [(ngModel)]=\"form.newsletter\"\n        #newsletter=\"ngModel\"\n      />\n      <label for=\"newsletter\">I want to receive news and updates about Green Wallet</label>\n    </div>\n\n    <div class=\"form-group\">\n      <button class=\"btn btn-primary btn-block\">Edit</button>\n    </div>\n\n    <div class=\"form-group\">\n      <button [routerLink]=\"['/profile']\" class=\"btn btn-primary btn-block\">Back</button>\n    </div>\n\n    <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n      Edition failed!<br />{{ errorMessage }}\n    </div>\n    \n  </div>\n  \n  <ng-template #loggedOut>\n    Please login.\n  </ng-template>\n   -->\n\n<div class=\"row\" id=\"con\">\n  <div class=\"container d-flex align-items-center justify-content-center\">\n    <div class=\"card text-center my-3\">\n      <div class=\"card-header titulos\">Edit your profile\n        <div class=\"ms-3 spinner-border text-primary\" role=\"status\" *ngIf=\"loading\">\n          <span class=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Enter the data you want modified</h5>\n        <form [formGroup]=\"formUpdate\" (ngSubmit)=\"onSubmit()\" class=\"mt-4 text-start\">\n          <div class=\"row mb-3\">\n            <div class=\"col-12\">\n              <label for=\"name\" class=\"form-label\">Name</label>\n              <input type=\"text\" id=\"name\" class=\"form-control\" formControlName=\"name\" required>\n              <span *ngIf=\"this.formUpdate.get('name')?.touched && this.formUpdate.get('name')?.errors?.['required']\">This field cannot be empty</span>\n              <span *ngIf=\"this.formUpdate.get('name')?.touched && this.formUpdate.get('name')?.errors?.['minLength']\">The name must be at least 5 characters</span>\n              <span *ngIf=\"this.formUpdate.get('name')?.touched && this.formUpdate.get('name')?.errors?.['maxLength']\">The name must be at least 40 characters</span>\n            </div>\n            <div class=\"col-12 mt-2\">\n              <label for=\"email\" class=\"form-label\">Email</label>\n              <input type=\"email\" id=\"email\" class=\"form-control\" formControlName=\"email\" required>\n              <span *ngIf=\"this.formUpdate.get('email')?.touched && this.formUpdate.get('email')?.errors?.['required']\">This field cannot be empty</span>\n              <span *ngIf=\"this.formUpdate.get('email')?.touched && this.formUpdate.get('email')?.errors?.['maxLength']\">The name must be at least 100 characters</span>\n            </div>\n            <div class=\"col-12 mt-2\">\n              <label for=\"phone_number\" class=\"form-label\">Phone number</label>\n              <input type=\"text\" id=\"phone_number\" class=\"form-control\" formControlName=\"phone_number\" required>\n              <span *ngIf=\"this.formUpdate.get('phone_number')?.touched && this.formUpdate.get('phone_number')?.errors?.['required']\">This field cannot be empty</span>\n            </div>\n            <div class=\"col-12 mt-2\">\n              <label for=\"cumn\" class=\"form-label\">Credit Union Member Number</label>\n              <input type=\"text\" id=\"cumn\" class=\"form-control\" formControlName=\"cumn\">\n            </div>\n            <div class=\"col-12 my-2 form-check form-switch\">\n              <input type=\"checkbox\" id=\"newsletter\" role=\"switch\" class=\"form-check-input form-control\" formControlName=\"newsletter\">\n              <label for=\"newsletter\" class=\"form-check-label\">I wish to receive updates and news about Green Wallet (NO/YES)</label>\n            </div>\n          </div>\n          <div class=\"my-3 text-center\">\n            <button class=\"btn btn-success btn-lg me-3\" type=\"text\" routerLink=\"/profile\">Return</button>\n            <button class=\"btn btn-success btn-lg\" type=\"submit\" [disabled]=\"!formUpdate\">Submit</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}