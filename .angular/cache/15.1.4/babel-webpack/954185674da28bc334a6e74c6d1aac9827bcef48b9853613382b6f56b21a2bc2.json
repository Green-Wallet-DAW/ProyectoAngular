{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/auth.service\";\nimport * as i2 from \"../_services/token-storage.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction EditComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"span\", 24);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EditComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field cannot be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditComponent_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"The name must be at least 5 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"The name must be at least 40 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditComponent_span_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field cannot be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditComponent_span_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"The name must be at least 100 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditComponent_span_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field cannot be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class EditComponent {\n  constructor(authService, token, router) {\n    this.authService = authService;\n    this.token = token;\n    this.router = router;\n    this.form = {\n      name: null,\n      email: null,\n      // password: null,\n      phone_number: null,\n      cumn: null,\n      newsletter: false\n      // news: null,\n    };\n\n    this.isSuccessful = false;\n    this.isSignUpFailed = false;\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    this.currentUser = this.token.getUser();\n  }\n  onSubmit() {\n    const {\n      name,\n      email,\n      phone_number,\n      cumn,\n      newsletter\n    } = this.form;\n    // console.log(this.form);\n    this.authService.update(name, email, phone_number, cumn, newsletter).subscribe(data => {\n      // console.log(data);\n      this.isSuccessful = true;\n      this.isSignUpFailed = false;\n      this.router.navigate(['profile']);\n    }, err => {\n      this.errorMessage = err.error.message;\n      this.isSignUpFailed = true;\n    });\n  }\n}\nEditComponent.ɵfac = function EditComponent_Factory(t) {\n  return new (t || EditComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.TokenStorageService), i0.ɵɵdirectiveInject(i3.Router));\n};\nEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditComponent,\n  selectors: [[\"app-edit\"]],\n  decls: 37,\n  vars: 13,\n  consts: [[\"id\", \"con\", 1, \"row\"], [1, \"container\", \"d-flex\", \"align-items-center\", \"justify-content-center\"], [1, \"card\", \"text-center\", \"my-3\"], [1, \"card-header\", \"titulos\"], [\"class\", \"ms-3 spinner-border text-primary\", \"role\", \"status\", 4, \"ngIf\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"mt-4\", \"text-start\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-3\"], [1, \"col-12\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"value\"], [4, \"ngIf\"], [1, \"col-12\", \"mt-2\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"value\"], [\"for\", \"phone_number\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"phone_number\", \"formControlName\", \"phone_number\", \"required\", \"\", 1, \"form-control\", 3, \"value\"], [\"for\", \"cumn\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"cumn\", \"formControlName\", \"cumn\", 1, \"form-control\", 3, \"value\"], [1, \"col-12\", \"my-2\", \"form-check\", \"form-switch\"], [\"type\", \"checkbox\", \"id\", \"cumn\", \"formControlName\", \"cumn\", 1, \"form-check-input\", \"form-control\", 3, \"value\"], [\"for\", \"text\", 1, \"\"], [\"role\", \"status\", 1, \"ms-3\", \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"]],\n  template: function EditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵtext(4, \"Edit your profile \");\n      i0.ɵɵtemplate(5, EditComponent_div_5_Template, 3, 0, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"h5\", 6);\n      i0.ɵɵtext(8, \"Enter the data you want modified\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function EditComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"div\", 9)(12, \"label\", 10);\n      i0.ɵɵtext(13, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 11);\n      i0.ɵɵtemplate(15, EditComponent_span_15_Template, 2, 0, \"span\", 12);\n      i0.ɵɵtemplate(16, EditComponent_span_16_Template, 2, 0, \"span\", 12);\n      i0.ɵɵtemplate(17, EditComponent_span_17_Template, 2, 0, \"span\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 13)(19, \"label\", 14);\n      i0.ɵɵtext(20, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 15);\n      i0.ɵɵtemplate(22, EditComponent_span_22_Template, 2, 0, \"span\", 12);\n      i0.ɵɵtemplate(23, EditComponent_span_23_Template, 2, 0, \"span\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 13)(25, \"label\", 16);\n      i0.ɵɵtext(26, \"Phone number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 17);\n      i0.ɵɵtemplate(28, EditComponent_span_28_Template, 2, 0, \"span\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 13)(30, \"label\", 18);\n      i0.ɵɵtext(31, \"Credit Union Member Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"input\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 20);\n      i0.ɵɵelement(34, \"input\", 21);\n      i0.ɵɵelementStart(35, \"label\", 22);\n      i0.ɵɵtext(36, \"Credit Union Member Number\");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      let tmp_7_0;\n      let tmp_8_0;\n      let tmp_10_0;\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.cargando);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.formUpdate);\n      i0.ɵɵadvance(5);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.currentUser.success.name);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.formUpdate.get(\"name\")) == null ? null : tmp_3_0.touched) && ((tmp_3_0 = ctx.formUpdate.get(\"name\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors[\"required\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.formUpdate.get(\"name\")) == null ? null : tmp_4_0.touched) && ((tmp_4_0 = ctx.formUpdate.get(\"name\")) == null ? null : tmp_4_0.errors == null ? null : tmp_4_0.errors[\"minLength\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.formUpdate.get(\"name\")) == null ? null : tmp_5_0.touched) && ((tmp_5_0 = ctx.formUpdate.get(\"name\")) == null ? null : tmp_5_0.errors == null ? null : tmp_5_0.errors[\"maxLength\"]));\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.currentUser.success.email);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.formUpdate.get(\"email\")) == null ? null : tmp_7_0.touched) && ((tmp_7_0 = ctx.formUpdate.get(\"email\")) == null ? null : tmp_7_0.errors == null ? null : tmp_7_0.errors[\"required\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_8_0 = ctx.formUpdate.get(\"email\")) == null ? null : tmp_8_0.touched) && ((tmp_8_0 = ctx.formUpdate.get(\"email\")) == null ? null : tmp_8_0.errors == null ? null : tmp_8_0.errors[\"maxLength\"]));\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.currentUser.success.phone_number);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_10_0 = ctx.formUpdate.get(\"phone_number\")) == null ? null : tmp_10_0.touched) && ((tmp_10_0 = ctx.formUpdate.get(\"phone_number\")) == null ? null : tmp_10_0.errors == null ? null : tmp_10_0.errors[\"required\"]));\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.currentUser.success.cumn);\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.currentUser.success.cumn);\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.CheckboxControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","EditComponent","constructor","authService","token","router","name","email","phone_number","cumn","newsletter","ngOnInit","currentUser","getUser","onSubmit","form","update","subscribe","data","isSuccessful","isSignUpFailed","navigate","err","errorMessage","error","message","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Axel\\Desktop\\GreenWallets\\ProyectoAngular\\src\\app\\edit\\edit.component.html","C:\\Users\\Axel\\Desktop\\GreenWallets\\ProyectoAngular\\src\\app\\edit\\edit.component.ts"],"sourcesContent":["<!-- <div class=\"container\" *ngIf=\"currentUser; else loggedOut\">\r\n    <header class=\"jumbotron\">\r\n      <h3>\r\n        Edit your profile\r\n      </h3>\r\n    </header>\r\n    <div>\r\n      <strong>Username:</strong>\r\n      <input type=\"text\" value=\"{{ currentUser.success.name }}\">\r\n    </div>\r\n    <div>\r\n      <strong>Email:</strong>\r\n      <input type=\"text\" value=\"{{ currentUser.success.email }}\">\r\n    </div>\r\n    <div>\r\n        <strong>Phone number:</strong>\r\n        <input type=\"text\" value=\"{{ currentUser.success.phone_number }}\">\r\n    </div>\r\n    <div>\r\n        <strong>Credit Union Member Number:</strong>\r\n        <input type=\"text\" value=\"{{ currentUser.success.cumn }}\">\r\n        \r\n    </div>\r\n    <div class=\"form-group\">\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"newsletter\"\r\n        id=\"newsletter\"\r\n        style=\"margin-right: 10px; height: 20px; width: 20px;\"\r\n        [(ngModel)]=\"form.newsletter\"\r\n        #newsletter=\"ngModel\"\r\n      />\r\n      <label for=\"newsletter\">I want to receive news and updates about Green Wallet</label>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <button class=\"btn btn-primary btn-block\">Edit</button>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <button [routerLink]=\"['/profile']\" class=\"btn btn-primary btn-block\">Back</button>\r\n    </div>\r\n\r\n    <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\r\n      Edition failed!<br />{{ errorMessage }}\r\n    </div>\r\n    \r\n  </div>\r\n  \r\n  <ng-template #loggedOut>\r\n    Please login.\r\n  </ng-template>\r\n   -->\r\n\r\n<div class=\"row\" id=\"con\">\r\n  <div class=\"container d-flex align-items-center justify-content-center\">\r\n    <div class=\"card text-center my-3\">\r\n      <div class=\"card-header titulos\">Edit your profile\r\n        <div class=\"ms-3 spinner-border text-primary\" role=\"status\" *ngIf=\"cargando\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <h5 class=\"card-title\">Enter the data you want modified</h5>\r\n        <form [formGroup]=\"formUpdate\" (ngSubmit)=\"onSubmit()\" class=\"mt-4 text-start\">\r\n          <div class=\"row mb-3\">\r\n            <div class=\"col-12\">\r\n              <label for=\"name\" class=\"form-label\">Name</label>\r\n              <input type=\"text\" id=\"name\" class=\"form-control\" value=\"{{ currentUser.success.name }}\" formControlName=\"name\" required>\r\n              <span *ngIf=\"this.formUpdate.get('name')?.touched && this.formUpdate.get('name')?.errors?.['required']\">This field cannot be empty</span>\r\n              <span *ngIf=\"this.formUpdate.get('name')?.touched && this.formUpdate.get('name')?.errors?.['minLength']\">The name must be at least 5 characters</span>\r\n              <span *ngIf=\"this.formUpdate.get('name')?.touched && this.formUpdate.get('name')?.errors?.['maxLength']\">The name must be at least 40 characters</span>\r\n            </div>\r\n            <div class=\"col-12 mt-2\">\r\n              <label for=\"email\" class=\"form-label\">Email</label>\r\n              <input type=\"email\" id=\"email\" class=\"form-control\" value=\"{{ currentUser.success.email }}\" formControlName=\"email\" required>\r\n              <span *ngIf=\"this.formUpdate.get('email')?.touched && this.formUpdate.get('email')?.errors?.['required']\">This field cannot be empty</span>\r\n              <span *ngIf=\"this.formUpdate.get('email')?.touched && this.formUpdate.get('email')?.errors?.['maxLength']\">The name must be at least 100 characters</span>\r\n            </div>\r\n            <div class=\"col-12 mt-2\">\r\n              <label for=\"phone_number\" class=\"form-label\">Phone number</label>\r\n              <input type=\"text\" id=\"phone_number\" class=\"form-control\" value=\"{{ currentUser.success.phone_number }}\" formControlName=\"phone_number\" required>\r\n              <span *ngIf=\"this.formUpdate.get('phone_number')?.touched && this.formUpdate.get('phone_number')?.errors?.['required']\">This field cannot be empty</span>\r\n            </div>\r\n            <div class=\"col-12 mt-2\">\r\n              <label for=\"cumn\" class=\"form-label\">Credit Union Member Number</label>\r\n              <input type=\"text\" id=\"cumn\" class=\"form-control\" value=\"{{ currentUser.success.cumn }}\" formControlName=\"cumn\">\r\n            </div>\r\n            <div class=\"col-12 my-2 form-check form-switch\">\r\n              <input type=\"checkbox\" id=\"cumn\" class=\"form-check-input form-control\" value=\"{{ currentUser.success.cumn }}\" formControlName=\"cumn\">\r\n              <label for=\"text\" class=\"\">Credit Union Member Number</label>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.css']\r\n})\r\nexport class EditComponent implements OnInit{\r\n[x: string]: any;\r\n  form: any = {\r\n    name: null,\r\n    email: null,\r\n    // password: null,\r\n    phone_number: null,\r\n    cumn: null,\r\n    newsletter: false,\r\n    // news: null,\r\n  };\r\n\r\n  currentUser: any;\r\n\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n  constructor(private authService: AuthService, private token: TokenStorageService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.token.getUser();\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const { name, email, phone_number, cumn, newsletter  } = this.form;\r\n\r\n    // console.log(this.form);\r\n    this.authService.update(name, email, phone_number, cumn, newsletter).subscribe(\r\n      data => {\r\n        // console.log(data);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n        this.router.navigate(['profile']); \r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isSignUpFailed = true;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}