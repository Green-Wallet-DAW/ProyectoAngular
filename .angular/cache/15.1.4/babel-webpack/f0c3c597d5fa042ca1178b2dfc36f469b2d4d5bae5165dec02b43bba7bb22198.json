{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthInterceptorService {\n  constructor(router) {\n    this.router = router;\n  }\n  intercept(req, next) {\n    const token = localStorage.getItem('token');\n    let request = req;\n    if (token) {\n      request = req.clone({\n        setHeaders: {\n          authorization: `Bearer ${token}`\n        }\n      });\n    }\n    return next.handle(request);\n    // return next.handle(request).pipe(\n    //   catchError((err: HttpErrorResponse) => {\n    //     if (err.status === 401) {\n    //       this.router.navigateByUrl('/login');\n    //     }\n    //     return throwError( err );\n    //   })\n    // );\n  }\n}\n\nAuthInterceptorService.ɵfac = function AuthInterceptorService_Factory(t) {\n  return new (t || AuthInterceptorService)(i0.ɵɵinject(i1.Router));\n};\nAuthInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthInterceptorService,\n  factory: AuthInterceptorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,sBAAsB;EAEjCC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAAW;EAErCC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAMC,KAAK,GAAWC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAEnD,IAAIC,OAAO,GAAGL,GAAG;IAEjB,IAAIE,KAAK,EAAE;MACTG,OAAO,GAAGL,GAAG,CAACM,KAAK,CAAC;QAClBC,UAAU,EAAE;UACVC,aAAa,EAAE,UAAWN,KAAM;;OAEnC,CAAC;;IAGJ,OAAOD,IAAI,CAACQ,MAAM,CAACJ,OAAO,CAAC;IAE3B;IACA;IAEA;IACA;IACA;IAEA;IAEA;IACA;EACF;;;AA9BWT,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;SAAtBA,sBAAsB;EAAAc,SAAtBd,sBAAsB;EAAAe,YAFrB;AAAM","names":["AuthInterceptorService","constructor","router","intercept","req","next","token","localStorage","getItem","request","clone","setHeaders","authorization","handle","factory","providedIn"],"sourceRoot":"","sources":["/home/alumno/Escritorio/GreenWallet/ProyectoAngular/src/app/_services/auth-interceptor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInterceptorService implements HttpInterceptor {\n\n  constructor(private router: Router) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token: string = localStorage.getItem('token');\n\n    let request = req;\n\n    if (token) {\n      request = req.clone({\n        setHeaders: {\n          authorization: `Bearer ${ token }`\n        }\n      });\n    }\n\n    return next.handle(request);\n\n    // return next.handle(request).pipe(\n    //   catchError((err: HttpErrorResponse) => {\n\n    //     if (err.status === 401) {\n    //       this.router.navigateByUrl('/login');\n    //     }\n\n    //     return throwError( err );\n\n    //   })\n    // );\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}