{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/auth.service\";\nimport * as i2 from \"../_services/token-storage.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction EditComponent_div_0_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" Edition failed!\");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r4.errorMessage, \" \");\n  }\n}\nconst _c0 = function () {\n  return [\"/profile\"];\n};\nfunction EditComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"header\", 3)(2, \"h3\");\n    i0.ɵɵtext(3, \" Edit your profile \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\")(5, \"strong\");\n    i0.ɵɵtext(6, \"Username:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\")(9, \"strong\");\n    i0.ɵɵtext(10, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\")(13, \"strong\");\n    i0.ɵɵtext(14, \"Phone number:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\")(17, \"strong\");\n    i0.ɵɵtext(18, \"Credit Union Member Number:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(19, \"input\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"div\", 5)(21, \"input\", 6, 7);\n    i0.ɵɵlistener(\"ngModelChange\", function EditComponent_div_0_Template_input_ngModelChange_21_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.form.newsletter = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"label\", 8);\n    i0.ɵɵtext(24, \"I want to receive news and updates about Green Wallet\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(25, \"div\", 5)(26, \"button\", 9);\n    i0.ɵɵtext(27, \"Edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(28, \"div\", 5)(29, \"button\", 10);\n    i0.ɵɵtext(30, \"Back\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(31, EditComponent_div_0_div_31_Template, 4, 1, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.currentUser.success.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.currentUser.success.email);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.currentUser.success.phone_number);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.currentUser.success.cumn);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.form.newsletter);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(7, _c0));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.submitted && ctx_r0.isSignUpFailed);\n  }\n}\nfunction EditComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" Please login. \");\n  }\n}\nexport class EditComponent {\n  constructor(authService, token, router) {\n    this.authService = authService;\n    this.token = token;\n    this.router = router;\n    this.form = {\n      name: null,\n      email: null,\n      password: null,\n      phone_number: null,\n      cumn: null,\n      newsletter: false\n      // news: null,\n    };\n\n    this.isSuccessful = false;\n    this.isSignUpFailed = false;\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    this.currentUser = this.token.getUser();\n  }\n  onSubmit() {\n    const {\n      name,\n      email,\n      phone_number,\n      cumn,\n      newsletter\n    } = this.form;\n    // console.log(this.form);\n    this.authService.register(name, email, phone_number, cumn, newsletter).subscribe(data => {\n      // console.log(data);\n      this.isSuccessful = true;\n      this.isSignUpFailed = false;\n      this.router.navigate(['profile']);\n    }, err => {\n      this.errorMessage = err.error.message;\n      this.isSignUpFailed = true;\n    });\n  }\n}\nEditComponent.ɵfac = function EditComponent_Factory(t) {\n  return new (t || EditComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.TokenStorageService), i0.ɵɵdirectiveInject(i3.Router));\n};\nEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditComponent,\n  selectors: [[\"app-edit\"]],\n  decls: 3,\n  vars: 2,\n  consts: [[\"class\", \"container\", 4, \"ngIf\", \"ngIfElse\"], [\"loggedOut\", \"\"], [1, \"container\"], [1, \"jumbotron\"], [\"type\", \"text\", 3, \"value\"], [1, \"form-group\"], [\"type\", \"checkbox\", \"name\", \"newsletter\", \"id\", \"newsletter\", 2, \"margin-right\", \"10px\", \"height\", \"20px\", \"width\", \"20px\", 3, \"ngModel\", \"ngModelChange\"], [\"newsletter\", \"ngModel\"], [\"for\", \"newsletter\"], [1, \"btn\", \"btn-primary\", \"btn-block\"], [1, \"btn\", \"btn-primary\", \"btn-block\", 3, \"routerLink\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [1, \"alert\", \"alert-warning\"]],\n  template: function EditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, EditComponent_div_0_Template, 32, 8, \"div\", 0);\n      i0.ɵɵtemplate(1, EditComponent_ng_template_1_Template, 1, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.currentUser)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i4.NgIf, i3.RouterLink, i5.CheckboxControlValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IA2CIA,+BAAuE;IACrEA,gCAAe;IAAAA,qBAAM;IAAAA,YACvB;IAAAA,iBAAM;;;;IADiBA,eACvB;IADuBA,mDACvB;;;;;;;;;IA7CJA,8BAA2D;IAGnDA,mCACF;IAAAA,iBAAK;IAEPA,2BAAK;IACKA,yBAAS;IAAAA,iBAAS;IAC1BA,2BAA0D;IAC5DA,iBAAM;IACNA,2BAAK;IACKA,uBAAM;IAAAA,iBAAS;IACvBA,4BAA2D;IAC7DA,iBAAM;IACNA,4BAAK;IACOA,8BAAa;IAAAA,iBAAS;IAC9BA,4BAAkE;IACtEA,iBAAM;IACNA,4BAAK;IACOA,4CAA2B;IAAAA,iBAAS;IAC5CA,4BAA0D;IAE9DA,iBAAM;IACNA,+BAAwB;IAMpBA;MAAAA;MAAA;MAAA,OAAaA,+CACf;IAAA,EAD+B;IAL/BA,iBAOE;IACFA,iCAAwB;IAAAA,sEAAqD;IAAAA,iBAAQ;IAGvFA,+BAAwB;IACoBA,qBAAI;IAAAA,iBAAS;IAGzDA,+BAAwB;IACgDA,qBAAI;IAAAA,iBAAS;IAGrFA,uEAEM;IAERA,iBAAM;;;;IAvCiBA,eAAsC;IAAtCA,kEAAsC;IAItCA,eAAuC;IAAvCA,mEAAuC;IAIrCA,eAA8C;IAA9CA,0EAA8C;IAI9CA,eAAsC;IAAtCA,kEAAsC;IASzDA,eAA6B;IAA7BA,gDAA6B;IAWvBA,eAA2B;IAA3BA,uDAA2B;IAGHA,eAAmC;IAAnCA,kEAAmC;;;;;IAOrEA,+BACF;;;ACzCF,OAAM,MAAOC,aAAa;EAgBxBC,YAAoBC,WAAwB,EAAUC,KAA0B,EAAUC,MAAc;IAApF,gBAAW,GAAXF,WAAW;IAAuB,UAAK,GAALC,KAAK;IAA+B,WAAM,GAANC,MAAM;IAfhG,SAAI,GAAQ;MACVC,IAAI,EAAE,IAAI;MACVC,KAAK,EAAE,IAAI;MACXC,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAE,IAAI;MAClBC,IAAI,EAAE,IAAI;MACVC,UAAU,EAAE;MACZ;KACD;;IAID,iBAAY,GAAG,KAAK;IACpB,mBAAc,GAAG,KAAK;IACtB,iBAAY,GAAG,EAAE;EAC2F;EAE5GC,QAAQ;IACN,IAAI,CAACC,WAAW,GAAG,IAAI,CAACT,KAAK,CAACU,OAAO,EAAE;EACzC;EAEAC,QAAQ;IACN,MAAM;MAAET,IAAI;MAAEC,KAAK;MAAEE,YAAY;MAAEC,IAAI;MAAEC;IAAU,CAAG,GAAG,IAAI,CAACK,IAAI;IAElE;IACA,IAAI,CAACb,WAAW,CAACc,QAAQ,CAACX,IAAI,EAAEC,KAAK,EAACE,YAAY,EAAEC,IAAI,EAAEC,UAAU,CAAC,CAACO,SAAS,CAC7EC,IAAI,IAAG;MACL;MACA,IAAI,CAACC,YAAY,GAAG,IAAI;MACxB,IAAI,CAACC,cAAc,GAAG,KAAK;MAC3B,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC,EACDC,GAAG,IAAG;MACJ,IAAI,CAACC,YAAY,GAAGD,GAAG,CAACE,KAAK,CAACC,OAAO;MACrC,IAAI,CAACL,cAAc,GAAG,IAAI;IAC5B,CAAC,CACF;EACH;;AAtCWpB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV1B/B,+DA+CQ;MAENA,+GAEc;;;;MAnDQA,sCAAmB","names":["i0","EditComponent","constructor","authService","token","router","name","email","password","phone_number","cumn","newsletter","ngOnInit","currentUser","getUser","onSubmit","form","register","subscribe","data","isSuccessful","isSignUpFailed","navigate","err","errorMessage","error","message","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/alumno/Escritorio/GreenWallet/ProyectoAngular/src/app/edit/edit.component.html","/home/alumno/Escritorio/GreenWallet/ProyectoAngular/src/app/edit/edit.component.ts"],"sourcesContent":["<div class=\"container\" *ngIf=\"currentUser; else loggedOut\">\n    <header class=\"jumbotron\">\n      <h3>\n        Edit your profile\n      </h3>\n    </header>\n    <div>\n      <strong>Username:</strong>\n      <input type=\"text\" value=\"{{ currentUser.success.name }}\">\n    </div>\n    <div>\n      <strong>Email:</strong>\n      <input type=\"text\" value=\"{{ currentUser.success.email }}\">\n    </div>\n    <div>\n        <strong>Phone number:</strong>\n        <input type=\"text\" value=\"{{ currentUser.success.phone_number }}\">\n    </div>\n    <div>\n        <strong>Credit Union Member Number:</strong>\n        <input type=\"text\" value=\"{{ currentUser.success.cumn }}\">\n        \n    </div>\n    <div class=\"form-group\">\n      <input\n        type=\"checkbox\"\n        name=\"newsletter\"\n        id=\"newsletter\"\n        style=\"margin-right: 10px; height: 20px; width: 20px;\"\n        [(ngModel)]=\"form.newsletter\"\n        #newsletter=\"ngModel\"\n      />\n      <label for=\"newsletter\">I want to receive news and updates about Green Wallet</label>\n    </div>\n\n    <div class=\"form-group\">\n      <button class=\"btn btn-primary btn-block\">Edit</button>\n    </div>\n\n    <div class=\"form-group\">\n      <button [routerLink]=\"['/profile']\" class=\"btn btn-primary btn-block\">Back</button>\n    </div>\n\n    <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n      Edition failed!<br />{{ errorMessage }}\n    </div>\n    \n  </div>\n  \n  <ng-template #loggedOut>\n    Please login.\n  </ng-template>\n  ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit{\n  form: any = {\n    name: null,\n    email: null,\n    password: null,\n    phone_number: null,\n    cumn: null,\n    newsletter: false,\n    // news: null,\n  };\n\n  currentUser: any;\n\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n  constructor(private authService: AuthService, private token: TokenStorageService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.token.getUser();\n  }\n\n  onSubmit(): void {\n    const { name, email, phone_number, cumn, newsletter  } = this.form;\n\n    // console.log(this.form);\n    this.authService.register(name, email phone_number, cumn, newsletter).subscribe(\n      data => {\n        // console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n        this.router.navigate(['profile']); \n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}