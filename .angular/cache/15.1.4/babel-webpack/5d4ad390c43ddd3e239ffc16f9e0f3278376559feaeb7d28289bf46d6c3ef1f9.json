{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/auth.service\";\nimport * as i2 from \"../_services/user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"../_services/token-storage.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nfunction EditComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"span\", 27);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EditComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field cannot be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditComponent_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"The name must be at least 5 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"The name must be at least 40 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditComponent_span_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field cannot be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditComponent_span_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"The name must be at least 100 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditComponent_span_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field cannot be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class EditComponent {\n  // form: { name: any; email: any; phone_number: any; cumn: any; newsletter: any; };\n  constructor(authService, token, router, toastr, token2) {\n    this.authService = authService;\n    this.token = token;\n    this.router = router;\n    this.toastr = toastr;\n    this.token2 = token2;\n    this.isSuccessful = false;\n    this.isSignUpFailed = false;\n    this.errorMessage = '';\n    this.enter = -1;\n    this.news = false;\n    this.formUpdate = new FormGroup({\n      id: new FormControl(''),\n      name: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(40)]),\n      email: new FormControl('', [Validators.required, Validators.maxLength(100)]),\n      phone_number: new FormControl('', [Validators.required]),\n      cumn: new FormControl(''),\n      newsletter: new FormControl(true, [Validators.required])\n    });\n    this.loading = false;\n    this.id1 = 0;\n    this.name1 = \"\";\n    this.email1 = \"\";\n    this.phone_number1 = \"\";\n    this.cumn1 = \"\";\n    this.newsletter1 = false;\n    // this.user = new User('','','','', false);\n  }\n\n  ngOnInit() {\n    this.loading = true;\n    this.token.getPublicContent().subscribe(result => {\n      // console.log(\"entra result\");\n      const currentuser = this.token2.getUser();\n      this.user = result;\n      this.loading = false;\n      if (currentuser.success.newsletter == 1) {\n        this.news = true;\n      } else {\n        this.news = false;\n      }\n      this.formUpdate.setValue({\n        id: currentuser.success.id,\n        name: currentuser.success.name,\n        email: currentuser.success.email,\n        phone_number: currentuser.success.phone_number,\n        cumn: currentuser.success.cumn,\n        newsletter: this.news\n        // name: \"name\",\n        // email: \"sfs@email.com\",\n        // phone_number: \"4575467547\",\n        // cumn: \"21345678NGG\",\n        // newsletter: true,\n      });\n    }, error => {\n      this.errorMessage = '';\n      if (error instanceof ErrorEvent) {\n        this.errorMessage = error.error.message;\n      } else if (error.status == 404) {\n        this.errorMessage = \"Error 404\";\n      } else {\n        this.errorMessage = \"Error status:\" + error.status;\n      }\n      this.loading = false;\n    });\n  }\n  onSubmit() {\n    if (this.formUpdate.valid) {\n      this.id1 = parseInt(this.formUpdate.value.id);\n      this.name1 = this.formUpdate.value.name;\n      this.email1 = this.formUpdate.value.email;\n      this.phone_number1 = this.formUpdate.value.phone_number;\n      this.cumn1 = this.formUpdate.value.cumn;\n      this.newsletter1 = this.formUpdate.value.newsletter;\n      // const newsletter = this.formUpdate.value.newsletter ? 1 : 0; This for a 1/0 return\n      this.loading = true;\n      // console.log(this.form);\n      this.authService.update(this.id1, this.name1, this.email1, this.phone_number1, this.cumn1, this.newsletter1).subscribe(result => {\n        // console.log(data);\n        this.loading = false;\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n        this.enter = 1;\n        const currentuser = this.token2.getUser();\n        currentuser.success.id = this.id1;\n        currentuser.success.name = this.name1;\n        currentuser.success.email = this.email1;\n        currentuser.success.phone_number = this.phone_number1;\n        currentuser.success.cumn = this.cumn1;\n        if (this.newsletter1) {\n          currentuser.success.newsletter = 1;\n        } else {\n          currentuser.success.newsletter = 0;\n        }\n        console.log(currentuser);\n        this.token2.saveUser(currentuser);\n        this.toastr.success('Your information has been updated successfully!', 'Profile updated', {\n          positionClass: 'toast-bottom-right',\n          timeOut: 2000\n        });\n        setTimeout(() => {\n          this.router.navigate(['/profile']);\n        }, 50);\n      }, error => {\n        this.isSignUpFailed = true;\n        this.loading = false;\n        this.enter = 0;\n        this.errorMessage = '';\n        if (error instanceof ErrorEvent) {\n          this.errorMessage = error.error.message;\n        } else {\n          this.errorMessage = \"Error status: \" + error.status;\n        }\n      });\n    } else {\n      this.toastr.error(\"The form did not validated correctly\", 'ERROR UPDATING PROFILE', {\n        positionClass: 'toast-bottom-right'\n      });\n    }\n  }\n}\nEditComponent.ɵfac = function EditComponent_Factory(t) {\n  return new (t || EditComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService), i0.ɵɵdirectiveInject(i5.TokenStorageService));\n};\nEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditComponent,\n  selectors: [[\"app-edit\"]],\n  decls: 42,\n  vars: 9,\n  consts: [[\"id\", \"con\", 1, \"row\"], [1, \"container\", \"d-flex\", \"align-items-center\", \"justify-content-center\"], [1, \"card\", \"text-center\", \"my-3\"], [1, \"card-header\", \"titulos\"], [\"class\", \"ms-3 spinner-border text-primary\", \"role\", \"status\", 4, \"ngIf\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"mt-4\", \"text-start\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-3\"], [1, \"col-12\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\"], [4, \"ngIf\"], [1, \"col-12\", \"mt-2\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"phone_number\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"phone_number\", \"formControlName\", \"phone_number\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"cumn\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"cumn\", \"formControlName\", \"cumn\", 1, \"form-control\"], [1, \"col-12\", \"my-2\", \"form-check\", \"form-switch\", \"ms-3\"], [\"type\", \"checkbox\", \"id\", \"newsletter\", \"role\", \"switch\", \"formControlName\", \"newsletter\", 1, \"form-check-input\", \"form-control\"], [\"for\", \"newsletter\", 1, \"form-check-label\"], [1, \"my-3\", \"text-center\"], [\"type\", \"text\", \"routerLink\", \"/profile\", 1, \"btn\", \"btn-success\", \"btn-lg\", \"me-3\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"btn-lg\", 3, \"disabled\"], [\"role\", \"status\", 1, \"ms-3\", \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"]],\n  template: function EditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵtext(4, \"Edit your profile \");\n      i0.ɵɵtemplate(5, EditComponent_div_5_Template, 3, 0, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"h5\", 6);\n      i0.ɵɵtext(8, \"Enter the data you want modified\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function EditComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"div\", 9)(12, \"label\", 10);\n      i0.ɵɵtext(13, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 11);\n      i0.ɵɵtemplate(15, EditComponent_span_15_Template, 2, 0, \"span\", 12);\n      i0.ɵɵtemplate(16, EditComponent_span_16_Template, 2, 0, \"span\", 12);\n      i0.ɵɵtemplate(17, EditComponent_span_17_Template, 2, 0, \"span\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 13)(19, \"label\", 14);\n      i0.ɵɵtext(20, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 15);\n      i0.ɵɵtemplate(22, EditComponent_span_22_Template, 2, 0, \"span\", 12);\n      i0.ɵɵtemplate(23, EditComponent_span_23_Template, 2, 0, \"span\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 13)(25, \"label\", 16);\n      i0.ɵɵtext(26, \"Phone number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 17);\n      i0.ɵɵtemplate(28, EditComponent_span_28_Template, 2, 0, \"span\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 13)(30, \"label\", 18);\n      i0.ɵɵtext(31, \"Credit Union Member Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"input\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 20);\n      i0.ɵɵelement(34, \"input\", 21);\n      i0.ɵɵelementStart(35, \"label\", 22);\n      i0.ɵɵtext(36, \"I wish to receive updates and news about Green Wallet (NO/YES)\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(37, \"div\", 23)(38, \"button\", 24);\n      i0.ɵɵtext(39, \"Return\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"button\", 25);\n      i0.ɵɵtext(41, \"Submit\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      let tmp_6_0;\n      let tmp_7_0;\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.formUpdate);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.formUpdate.get(\"name\")) == null ? null : tmp_2_0.touched) && ((tmp_2_0 = ctx.formUpdate.get(\"name\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"required\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.formUpdate.get(\"name\")) == null ? null : tmp_3_0.touched) && ((tmp_3_0 = ctx.formUpdate.get(\"name\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors[\"minLength\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.formUpdate.get(\"name\")) == null ? null : tmp_4_0.touched) && ((tmp_4_0 = ctx.formUpdate.get(\"name\")) == null ? null : tmp_4_0.errors == null ? null : tmp_4_0.errors[\"maxLength\"]));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.formUpdate.get(\"email\")) == null ? null : tmp_5_0.touched) && ((tmp_5_0 = ctx.formUpdate.get(\"email\")) == null ? null : tmp_5_0.errors == null ? null : tmp_5_0.errors[\"required\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.formUpdate.get(\"email\")) == null ? null : tmp_6_0.touched) && ((tmp_6_0 = ctx.formUpdate.get(\"email\")) == null ? null : tmp_6_0.errors == null ? null : tmp_6_0.errors[\"maxLength\"]));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.formUpdate.get(\"phone_number\")) == null ? null : tmp_7_0.touched) && ((tmp_7_0 = ctx.formUpdate.get(\"phone_number\")) == null ? null : tmp_7_0.errors == null ? null : tmp_7_0.errors[\"required\"]));\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"disabled\", !ctx.formUpdate);\n    }\n  },\n  dependencies: [i6.NgIf, i3.RouterLink, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.CheckboxControlValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.FormGroupDirective, i7.FormControlName],\n  styles: [\"#con[_ngcontent-%COMP%]{\\r\\n    min-height: 85vh;\\r\\n}\\r\\n.card[_ngcontent-%COMP%]{\\r\\n    width: 90%;\\r\\n    opacity: 0.96;\\r\\n}\\r\\n.card[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{\\r\\n    font-size: 22px;\\r\\n}\\r\\n.titulos[_ngcontent-%COMP%]{\\r\\n    font-size: 30px;\\r\\n}\\r\\nspan[_ngcontent-%COMP%]{\\r\\n    color: red;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZWRpdC9lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLFVBQVU7SUFDVixhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxlQUFlO0FBQ25CO0FBQ0E7SUFDSSxlQUFlO0FBQ25CO0FBQ0E7SUFDSSxVQUFVO0FBQ2QiLCJzb3VyY2VzQ29udGVudCI6WyIjY29ue1xyXG4gICAgbWluLWhlaWdodDogODV2aDtcclxufVxyXG4uY2FyZHtcclxuICAgIHdpZHRoOiA5MCU7XHJcbiAgICBvcGFjaXR5OiAwLjk2O1xyXG59XHJcbi5jYXJkIGg1e1xyXG4gICAgZm9udC1zaXplOiAyMnB4O1xyXG59XHJcbi50aXR1bG9ze1xyXG4gICAgZm9udC1zaXplOiAzMHB4O1xyXG59XHJcbnNwYW57XHJcbiAgICBjb2xvcjogcmVkO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","EditComponent","constructor","authService","token","router","toastr","token2","id","name","required","minLength","maxLength","email","phone_number","cumn","newsletter","ngOnInit","loading","getPublicContent","subscribe","result","currentuser","getUser","user","success","news","formUpdate","setValue","error","errorMessage","ErrorEvent","message","status","onSubmit","valid","id1","parseInt","value","name1","email1","phone_number1","cumn1","newsletter1","update","isSuccessful","isSignUpFailed","enter","console","log","saveUser","positionClass","timeOut","setTimeout","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Axel\\Desktop\\GreenWallets\\ProyectoAngular\\src\\app\\edit\\edit.component.ts","C:\\Users\\Axel\\Desktop\\GreenWallets\\ProyectoAngular\\src\\app\\edit\\edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { User } from './user';\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.css']\r\n})\r\nexport class EditComponent implements OnInit{\r\n  \r\n  // public  name: string | null;\r\n  // public  email: string | null;\r\n  // public  phone_number: string | null;\r\n  // public  cumn: string | null;\r\n  // public newsletter: any;\r\n\r\n  public user: any;\r\n\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n  public enter = -1;\r\n  news = false;\r\n\r\n  formUpdate = new FormGroup({\r\n    id: new FormControl(''),\r\n    name: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(40)]),\r\n    email: new FormControl('', [Validators.required, Validators.maxLength(100)]),\r\n    phone_number: new FormControl('', [Validators.required]),\r\n    cumn: new FormControl(''),\r\n    newsletter: new FormControl(true, [Validators.required]),\r\n  });\r\n  public loading = false;\r\n  // form: { name: any; email: any; phone_number: any; cumn: any; newsletter: any; };\r\n\r\n  constructor(private authService: AuthService, private token: UserService, private router: Router, private toastr: ToastrService, private token2: TokenStorageService) {\r\n    // this.user = new User('','','','', false);\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.token.getPublicContent()\r\n    .subscribe(\r\n      result =>{\r\n        // console.log(\"entra result\");\r\n        const currentuser = this.token2.getUser();\r\n        this.user = result;\r\n        this.loading = false;\r\n        if(currentuser.success.newsletter == 1){\r\n          this.news = true;\r\n        }else{\r\n          this.news = false;\r\n        }\r\n        this.formUpdate.setValue({\r\n          id: currentuser.success.id,\r\n          name: currentuser.success.name,\r\n          email: currentuser.success.email,\r\n          phone_number: currentuser.success.phone_number,\r\n          cumn: currentuser.success.cumn,\r\n          newsletter: this.news,\r\n          // name: \"name\",\r\n          // email: \"sfs@email.com\",\r\n          // phone_number: \"4575467547\",\r\n          // cumn: \"21345678NGG\",\r\n          // newsletter: true,\r\n        });\r\n      },\r\n      error => {\r\n        this.errorMessage = '';\r\n        if (error instanceof ErrorEvent) {\r\n          this.errorMessage = error.error.message;\r\n        } else if (error.status == 404) {\r\n          this.errorMessage = \"Error 404\";\r\n        } else {\r\n          this.errorMessage = \"Error status:\" + error.status;\r\n        }\r\n        this.loading = false;\r\n      }\r\n      \r\n    );\r\n  }\r\n\r\n  id1 = 0;\r\n  name1 = \"\";\r\n  email1 = \"\";\r\n  phone_number1 = \"\";\r\n  cumn1 = \"\";\r\n  newsletter1 = false;\r\n\r\n  onSubmit(): void {\r\n    if(this.formUpdate.valid){\r\n      this.id1 = parseInt(this.formUpdate.value.id!);\r\n      this.name1 = this.formUpdate.value.name!;\r\n      this.email1  = this.formUpdate.value.email!;\r\n      this.phone_number1  = this.formUpdate.value.phone_number!;\r\n      this.cumn1  = this.formUpdate.value.cumn!;\r\n      this.newsletter1  = this.formUpdate.value.newsletter;\r\n      // const newsletter = this.formUpdate.value.newsletter ? 1 : 0; This for a 1/0 return\r\n      this.loading = true;\r\n\r\n      // console.log(this.form);\r\n      this.authService.update(this.id1, this.name1, this.email1, this.phone_number1, this.cumn1, this.newsletter1,).subscribe(\r\n        result => {\r\n          // console.log(data);\r\n          this.loading = false;\r\n          this.isSuccessful = true;\r\n          this.isSignUpFailed = false;\r\n          this.enter = 1;\r\n\r\n          const currentuser = this.token2.getUser();\r\n          currentuser.success.id = this.id1;\r\n          currentuser.success.name = this.name1;\r\n          currentuser.success.email = this.email1;\r\n          currentuser.success.phone_number = this.phone_number1;\r\n          currentuser.success.cumn = this.cumn1;\r\n          if(this.newsletter1){\r\n            currentuser.success.newsletter = 1;\r\n          }else{\r\n            currentuser.success.newsletter = 0;\r\n          }\r\n          console.log(currentuser);\r\n          this.token2.saveUser(currentuser);\r\n\r\n\r\n          this.toastr.success('Your information has been updated successfully!', 'Profile updated', {positionClass: 'toast-bottom-right', timeOut:2000});\r\n          setTimeout(() => {\r\n            this.router.navigate(['/profile']);\r\n          }, 50);\r\n        },\r\n        error => {\r\n          this.isSignUpFailed = true;\r\n          this.loading = false;\r\n          this.enter = 0;\r\n          this.errorMessage = '';\r\n          if(error instanceof ErrorEvent){\r\n            this.errorMessage = error.error.message;\r\n          }else{\r\n            this.errorMessage = \"Error status: \" + error.status;\r\n          }\r\n        }\r\n      );\r\n    }else{\r\n      this.toastr.error(\"The form did not validated correctly\", 'ERROR UPDATING PROFILE', {positionClass: 'toast-bottom-right'});\r\n    }\r\n  }\r\n}\r\n","<div class=\"row\" id=\"con\">\r\n  <div class=\"container d-flex align-items-center justify-content-center\">\r\n    <div class=\"card text-center my-3\">\r\n      <div class=\"card-header titulos\">Edit your profile\r\n        <div class=\"ms-3 spinner-border text-primary\" role=\"status\" *ngIf=\"loading\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <h5 class=\"card-title\">Enter the data you want modified</h5>\r\n        <form [formGroup]=\"formUpdate\" (ngSubmit)=\"onSubmit()\" class=\"mt-4 text-start\">\r\n          <div class=\"row mb-3\">\r\n            <!-- <div class=\"col-12\" hidden>\r\n              <label for=\"id\" class=\"form-label\">id</label>\r\n              <input type=\"number\" id=\"id\" class=\"form-control\" formControlName=\"id\">\r\n            </div> -->\r\n            <div class=\"col-12\">\r\n              <label for=\"name\" class=\"form-label\">Name</label>\r\n              <input type=\"text\" id=\"name\" class=\"form-control\" formControlName=\"name\" required>\r\n              <span *ngIf=\"this.formUpdate.get('name')?.touched && this.formUpdate.get('name')?.errors?.['required']\">This field cannot be empty</span>\r\n              <span *ngIf=\"this.formUpdate.get('name')?.touched && this.formUpdate.get('name')?.errors?.['minLength']\">The name must be at least 5 characters</span>\r\n              <span *ngIf=\"this.formUpdate.get('name')?.touched && this.formUpdate.get('name')?.errors?.['maxLength']\">The name must be at least 40 characters</span>\r\n            </div>\r\n            <div class=\"col-12 mt-2\">\r\n              <label for=\"email\" class=\"form-label\">Email</label>\r\n              <input type=\"email\" id=\"email\" class=\"form-control\" formControlName=\"email\" required>\r\n              <span *ngIf=\"this.formUpdate.get('email')?.touched && this.formUpdate.get('email')?.errors?.['required']\">This field cannot be empty</span>\r\n              <span *ngIf=\"this.formUpdate.get('email')?.touched && this.formUpdate.get('email')?.errors?.['maxLength']\">The name must be at least 100 characters</span>\r\n            </div>\r\n            <div class=\"col-12 mt-2\">\r\n              <label for=\"phone_number\" class=\"form-label\">Phone number</label>\r\n              <input type=\"text\" id=\"phone_number\" class=\"form-control\" formControlName=\"phone_number\" required>\r\n              <span *ngIf=\"this.formUpdate.get('phone_number')?.touched && this.formUpdate.get('phone_number')?.errors?.['required']\">This field cannot be empty</span>\r\n            </div>\r\n            <div class=\"col-12 mt-2\">\r\n              <label for=\"cumn\" class=\"form-label\">Credit Union Member Number</label>\r\n              <input type=\"text\" id=\"cumn\" class=\"form-control\" formControlName=\"cumn\">\r\n            </div>\r\n            <div class=\"col-12 my-2 form-check form-switch ms-3\">\r\n              <input type=\"checkbox\" id=\"newsletter\" role=\"switch\" class=\"form-check-input form-control\" formControlName=\"newsletter\">\r\n              <label for=\"newsletter\" class=\"form-check-label\">I wish to receive updates and news about Green Wallet (NO/YES)</label>\r\n            </div>\r\n          </div>\r\n          <div class=\"my-3 text-center\">\r\n            <button class=\"btn btn-success btn-lg me-3\" type=\"text\" routerLink=\"/profile\">Return</button>\r\n            <button class=\"btn btn-success btn-lg\" type=\"submit\" [disabled]=\"!formUpdate\">Submit</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}